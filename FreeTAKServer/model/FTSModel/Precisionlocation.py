from FreeTAKServer.model.FTSModel.fts_protocol_object import FTSProtocolObject
#######################################################
#
# Precisionlocation.py
# Python implementation of the Class Precisionlocation
# Generated by Enterprise Architect
# Created on(FTSProtocolObject):      11-Feb-2020 11(FTSProtocolObject):08(FTSProtocolObject):10 AM
# Original author: Corvo
#
#######################################################
from FreeTAKServer.model.FTSModelVariables.PrecisionlocationVariables import PrecisionlocationVariables as vars


class Precisionlocation(FTSProtocolObject):
    """some type of location?
    """

# TDB can be DTED0 or ???

    # default constructor
    def __init__(self):
        self.altsrc = None
        self.geopointsrc = None

    @staticmethod
    def drop_point(ALTSRC=vars.drop_point().ALTSRC):
        precisionlocation = Precisionlocation()
        precisionlocation.setaltsrc(altsrc=ALTSRC)
        return precisionlocation

    @staticmethod
    def connection(ALTSRC=vars.connection().ALTSRC, GEOPOINTSRC=vars.connection().GEOPOINTSRC):
        precisionlocation = Precisionlocation()
        precisionlocation.setaltsrc(altsrc=ALTSRC)
        precisionlocation.setgeopointsrc(geopointsrc=GEOPOINTSRC)
        return precisionlocation

    @staticmethod
    def UserUpdate(ALTSRC=vars.UserUpdate().altsrc, GEOPOINTSRC=vars.UserUpdate().geopointsrc):
        precisionlocation = Precisionlocation()
        precisionlocation.setaltsrc(ALTSRC)
        precisionlocation.setgeopointsrc(GEOPOINTSRC)
        return precisionlocation

    # geopointsrc getter
    def getgeopointsrc(self):
        return self.geopointsrc

    # geopointsrc setter
    def setgeopointsrc(self, geopointsrc=0):
        self.geopointsrc = geopointsrc

    # altsrc getter
    def getaltsrc(self):
        return self.altsrc

    # altsrc setter
    def setaltsrc(self, altsrc=0):
        self.altsrc = altsrc
