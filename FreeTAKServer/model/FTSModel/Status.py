from FreeTAKServer.model.FTSModel.fts_protocol_object import FTSProtocolObject
#######################################################
# 
# Status.py
# Python implementation of the Class Status
# Generated by Enterprise Architect
# Created on(FTSProtocolObject):      11-Feb-2020 11(FTSProtocolObject):08(FTSProtocolObject):07 AM
# Original author: Corvo
# 
#######################################################
from FreeTAKServer.model.FTSModelVariables.statusVariables import statusVariables as vars

class Status(FTSProtocolObject):
    def __init__(self):
        self.battery = vars().BATTERY
        self.readiness = vars().READINESS
    # % of the battery on the phone

    @staticmethod
    def drop_point(battery=vars.drop_point().BATTERY, readiness=vars.drop_point().READINESS):
        status = Status()
        status.setbattery(battery=battery)
        status.setreadiness(readiness=readiness)
        return status

    @staticmethod
    def connection(battery=vars.connection().BATTERY, readiness=vars.connection().READINESS):
        status = Status()
        status.setbattery(battery=battery)
        status.setreadiness(readiness=readiness)
        return status

    @staticmethod
    def FederatedCoT():
        status = Status()
        return status

    @staticmethod
    def UserUpdate(BATTERY=vars.UserUpdate().battery):
        status = Status()
        status.setbattery(BATTERY)
        return status

    # battery getter 
    def getbattery(self): 
        return self.battery 

    # battery setter 
    def setbattery(self, battery=0):  
        self.battery = battery

    # probably boolean to determine if ready or not
     
    # readiness getter 
    def getreadiness(self): 
        return self.readiness 

    # readiness setter 
    def setreadiness(self, readiness=0):  
        self.readiness = readiness
