#######################################################
# 
# point.py
# Python implementation of the CoT point
# Generated by Enterprise Architect
# Created on(FTSProtocolObject):      11-Feb-2020 11(FTSProtocolObject):08(FTSProtocolObject):07 AM
# Original author: Corvo
# 
#######################################################
# Latitude referred to the WGS 84 ellipsoid in degrees
from .model_constants.PointVariables import PointVariables as vars
from FreeTAKServer.components.core.abstract_component.cot_node import CoTNode
from FreeTAKServer.components.core.abstract_component.cot_property import CoTProperty


class point(CoTNode):

    def __init__(self, configuration, model, registry=None, le=vars().LE, ce=vars().CE, hae=vars().HAE, lon=vars().LON, lat=vars().LAT):
        attributes = {}
        attributes["le"] = int
        attributes["ce"] = int
        attributes["hae"] = int
        attributes["lon"] = int
        attributes["lat"] = int
        super().__init__(self.__class__.__name__, configuration, model, registry, attributes)

    @CoTProperty
    def ce(self): 
        return self.__ce

    @ce.setter
    def ce(self, ce: int):
        self.__ce=ce 

    @CoTProperty
    def le(self): 
        return self.__le

    @le.setter
    def le(self,le: int):  
        self.__le=le

    @CoTProperty
    def lat(self):
        return self.__lat

    @lat.setter
    def lat(self, lat: int):  
        self.__lat=lat

    @CoTProperty
    def lon(self):
        return self.__lon

    @lon.setter
    def lon(self,lon: int):
        self.__lon=lon

    @CoTProperty
    def hae(self):
        return self.__hae

    @hae.setter
    def hae(self, hae: int):
        self.__hae = hae