#######################################################
#
# detail.py
# Python implementation of the Class detail
# Generated by Enterprise Architect
# Created on(FTSProtocolObject): 11-Feb-2020 11:08:07 AM
# Original author: Corvo
#
#######################################################

from FreeTAKServer.components.core.abstract_component.cot_node import CoTNode
from FreeTAKServer.components.core.abstract_component.cot_property import CoTProperty


class detail(CoTNode):
    """An optional element used to hold CoT sub-schema. empty element"""

    __index = -1

    def __init__(self, configuration, model, registry=None):
        super().__init__(self.__class__.__name__, configuration, model, registry, {})

    @CoTProperty
    def marti(self):
        data = self.__marti
        if data is None:
            raise AttributeError("attribute 'marti' doesnt exist")
        return data

    @marti.setter
    def marti(self, marti):
        self.__marti = marti

    @CoTProperty
    def link(self):
        data = self.__link
        if data is None:
            raise AttributeError("attribute 'link' doesnt exist")
        return data

    @link.setter
    def link(self, link):
        self.__link = link

    @CoTProperty
    def contact(self):
        data = self.__contact
        if data is None:
            raise AttributeError("attribute 'contact' doesnt exist")
        return data

    @contact.setter
    def contact(self, contact):
        self.__contact = contact

    @CoTProperty
    def emergency(self):
        data = self.__emergency
        if data is None:
            raise AttributeError("attribute 'emergency' doesnt exist")
        return data

    @emergency.setter
    def emergency(self, emergency):
        self.__emergency = emergency

    @CoTProperty
    def remarks(self):
        data = self.__remarks
        if data is None:
            raise AttributeError("attribute 'remarks' doesnt exist")
        return data

    @remarks.setter
    def remarks(self, remarks):
        self.__remarks = remarks
