#######################################################
#
# Emergency.py
# Python implementation of the Class Emergency
# Generated by Enterprise Architect
# Created on:      13-Apr-2020 4:40:22 PM
# Original author: Corvo
#
#######################################################
from .model_constants import EmergencyVariables as vars
from FreeTAKServer.components.core.abstract_component.cot_node import CoTNode
from FreeTAKServer.components.core.abstract_component.cot_property import CoTProperty


class emergency(CoTNode):
    """An Emergency beacon the is continually send to all the connected clients until
    deactivated from the original creator
    """

    def __init__(self, configuration, model):
        super().__init__(self.__class__.__name__, configuration, model)
        self.__type = None
        self.__alert = None
        # if true the Emergency beacon is canceled
        self.__cancel = None
        self.__INTAG = None

    @CoTProperty
    def type(self):
        return self.__type

    @type.setter
    def type(self, type=None):
        self.__type = type

    @CoTProperty
    def Alert(self):
        return self.__alert

    @Alert.setter
    def Alert(self, alert=None):
        self.__alert = alert

    @CoTProperty
    def cancel(self):
        return self.__cancel

    @cancel.setter
    def cancel(self, cancel=None):
        self.__cancel = cancel

    @CoTProperty
    def INTAG(self):
        return self.__INTAG

    @INTAG.setter
    def INTAG(self, INTAG=None):
        self.__INTAG = INTAG
