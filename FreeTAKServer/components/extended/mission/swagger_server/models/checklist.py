# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.checklist_columns import ChecklistColumns  # noqa: F401,E501
from swagger_server.models.checklist_details import ChecklistDetails  # noqa: F401,E501
from swagger_server.models.checklist_tasks import ChecklistTasks  # noqa: F401,E501
from swagger_server import util


class Checklist(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, checklist_details: ChecklistDetails=None, checklist_columns: ChecklistColumns=None, checklist_tasks: ChecklistTasks=None):  # noqa: E501
        """Checklist - a model defined in Swagger

        :param checklist_details: The checklist_details of this Checklist.  # noqa: E501
        :type checklist_details: ChecklistDetails
        :param checklist_columns: The checklist_columns of this Checklist.  # noqa: E501
        :type checklist_columns: ChecklistColumns
        :param checklist_tasks: The checklist_tasks of this Checklist.  # noqa: E501
        :type checklist_tasks: ChecklistTasks
        """
        self.swagger_types = {
            'checklist_details': ChecklistDetails,
            'checklist_columns': ChecklistColumns,
            'checklist_tasks': ChecklistTasks
        }

        self.attribute_map = {
            'checklist_details': 'checklistDetails',
            'checklist_columns': 'checklistColumns',
            'checklist_tasks': 'checklistTasks'
        }
        self._checklist_details = checklist_details
        self._checklist_columns = checklist_columns
        self._checklist_tasks = checklist_tasks

    @classmethod
    def from_dict(cls, dikt) -> 'Checklist':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Checklist of this Checklist.  # noqa: E501
        :rtype: Checklist
        """
        return util.deserialize_model(dikt, cls)

    @property
    def checklist_details(self) -> ChecklistDetails:
        """Gets the checklist_details of this Checklist.


        :return: The checklist_details of this Checklist.
        :rtype: ChecklistDetails
        """
        return self._checklist_details

    @checklist_details.setter
    def checklist_details(self, checklist_details: ChecklistDetails):
        """Sets the checklist_details of this Checklist.


        :param checklist_details: The checklist_details of this Checklist.
        :type checklist_details: ChecklistDetails
        """
        if checklist_details is None:
            raise ValueError("Invalid value for `checklist_details`, must not be `None`")  # noqa: E501

        self._checklist_details = checklist_details

    @property
    def checklist_columns(self) -> ChecklistColumns:
        """Gets the checklist_columns of this Checklist.


        :return: The checklist_columns of this Checklist.
        :rtype: ChecklistColumns
        """
        return self._checklist_columns

    @checklist_columns.setter
    def checklist_columns(self, checklist_columns: ChecklistColumns):
        """Sets the checklist_columns of this Checklist.


        :param checklist_columns: The checklist_columns of this Checklist.
        :type checklist_columns: ChecklistColumns
        """
        if checklist_columns is None:
            raise ValueError("Invalid value for `checklist_columns`, must not be `None`")  # noqa: E501

        self._checklist_columns = checklist_columns

    @property
    def checklist_tasks(self) -> ChecklistTasks:
        """Gets the checklist_tasks of this Checklist.


        :return: The checklist_tasks of this Checklist.
        :rtype: ChecklistTasks
        """
        return self._checklist_tasks

    @checklist_tasks.setter
    def checklist_tasks(self, checklist_tasks: ChecklistTasks):
        """Sets the checklist_tasks of this Checklist.


        :param checklist_tasks: The checklist_tasks of this Checklist.
        :type checklist_tasks: ChecklistTasks
        """
        if checklist_tasks is None:
            raise ValueError("Invalid value for `checklist_tasks`, must not be `None`")  # noqa: E501

        self._checklist_tasks = checklist_tasks
