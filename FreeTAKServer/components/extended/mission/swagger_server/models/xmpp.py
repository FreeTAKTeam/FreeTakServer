# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Xmpp(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, xmpp_host: str=None, xmpp_port: int=None, tak_server_host: str=None, tak_server_port: int=None, xmpp_shared_secret: str=None, xmpp_component_retry_count: int=None, xmpp_component_retry_delay: int=None):  # noqa: E501
        """Xmpp - a model defined in Swagger

        :param xmpp_host: The xmpp_host of this Xmpp.  # noqa: E501
        :type xmpp_host: str
        :param xmpp_port: The xmpp_port of this Xmpp.  # noqa: E501
        :type xmpp_port: int
        :param tak_server_host: The tak_server_host of this Xmpp.  # noqa: E501
        :type tak_server_host: str
        :param tak_server_port: The tak_server_port of this Xmpp.  # noqa: E501
        :type tak_server_port: int
        :param xmpp_shared_secret: The xmpp_shared_secret of this Xmpp.  # noqa: E501
        :type xmpp_shared_secret: str
        :param xmpp_component_retry_count: The xmpp_component_retry_count of this Xmpp.  # noqa: E501
        :type xmpp_component_retry_count: int
        :param xmpp_component_retry_delay: The xmpp_component_retry_delay of this Xmpp.  # noqa: E501
        :type xmpp_component_retry_delay: int
        """
        self.swagger_types = {
            'xmpp_host': str,
            'xmpp_port': int,
            'tak_server_host': str,
            'tak_server_port': int,
            'xmpp_shared_secret': str,
            'xmpp_component_retry_count': int,
            'xmpp_component_retry_delay': int
        }

        self.attribute_map = {
            'xmpp_host': 'xmppHost',
            'xmpp_port': 'xmppPort',
            'tak_server_host': 'takServerHost',
            'tak_server_port': 'takServerPort',
            'xmpp_shared_secret': 'xmppSharedSecret',
            'xmpp_component_retry_count': 'xmppComponentRetryCount',
            'xmpp_component_retry_delay': 'xmppComponentRetryDelay'
        }
        self._xmpp_host = xmpp_host
        self._xmpp_port = xmpp_port
        self._tak_server_host = tak_server_host
        self._tak_server_port = tak_server_port
        self._xmpp_shared_secret = xmpp_shared_secret
        self._xmpp_component_retry_count = xmpp_component_retry_count
        self._xmpp_component_retry_delay = xmpp_component_retry_delay

    @classmethod
    def from_dict(cls, dikt) -> 'Xmpp':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Xmpp of this Xmpp.  # noqa: E501
        :rtype: Xmpp
        """
        return util.deserialize_model(dikt, cls)

    @property
    def xmpp_host(self) -> str:
        """Gets the xmpp_host of this Xmpp.


        :return: The xmpp_host of this Xmpp.
        :rtype: str
        """
        return self._xmpp_host

    @xmpp_host.setter
    def xmpp_host(self, xmpp_host: str):
        """Sets the xmpp_host of this Xmpp.


        :param xmpp_host: The xmpp_host of this Xmpp.
        :type xmpp_host: str
        """

        self._xmpp_host = xmpp_host

    @property
    def xmpp_port(self) -> int:
        """Gets the xmpp_port of this Xmpp.


        :return: The xmpp_port of this Xmpp.
        :rtype: int
        """
        return self._xmpp_port

    @xmpp_port.setter
    def xmpp_port(self, xmpp_port: int):
        """Sets the xmpp_port of this Xmpp.


        :param xmpp_port: The xmpp_port of this Xmpp.
        :type xmpp_port: int
        """

        self._xmpp_port = xmpp_port

    @property
    def tak_server_host(self) -> str:
        """Gets the tak_server_host of this Xmpp.


        :return: The tak_server_host of this Xmpp.
        :rtype: str
        """
        return self._tak_server_host

    @tak_server_host.setter
    def tak_server_host(self, tak_server_host: str):
        """Sets the tak_server_host of this Xmpp.


        :param tak_server_host: The tak_server_host of this Xmpp.
        :type tak_server_host: str
        """

        self._tak_server_host = tak_server_host

    @property
    def tak_server_port(self) -> int:
        """Gets the tak_server_port of this Xmpp.


        :return: The tak_server_port of this Xmpp.
        :rtype: int
        """
        return self._tak_server_port

    @tak_server_port.setter
    def tak_server_port(self, tak_server_port: int):
        """Sets the tak_server_port of this Xmpp.


        :param tak_server_port: The tak_server_port of this Xmpp.
        :type tak_server_port: int
        """

        self._tak_server_port = tak_server_port

    @property
    def xmpp_shared_secret(self) -> str:
        """Gets the xmpp_shared_secret of this Xmpp.


        :return: The xmpp_shared_secret of this Xmpp.
        :rtype: str
        """
        return self._xmpp_shared_secret

    @xmpp_shared_secret.setter
    def xmpp_shared_secret(self, xmpp_shared_secret: str):
        """Sets the xmpp_shared_secret of this Xmpp.


        :param xmpp_shared_secret: The xmpp_shared_secret of this Xmpp.
        :type xmpp_shared_secret: str
        """

        self._xmpp_shared_secret = xmpp_shared_secret

    @property
    def xmpp_component_retry_count(self) -> int:
        """Gets the xmpp_component_retry_count of this Xmpp.


        :return: The xmpp_component_retry_count of this Xmpp.
        :rtype: int
        """
        return self._xmpp_component_retry_count

    @xmpp_component_retry_count.setter
    def xmpp_component_retry_count(self, xmpp_component_retry_count: int):
        """Sets the xmpp_component_retry_count of this Xmpp.


        :param xmpp_component_retry_count: The xmpp_component_retry_count of this Xmpp.
        :type xmpp_component_retry_count: int
        """

        self._xmpp_component_retry_count = xmpp_component_retry_count

    @property
    def xmpp_component_retry_delay(self) -> int:
        """Gets the xmpp_component_retry_delay of this Xmpp.


        :return: The xmpp_component_retry_delay of this Xmpp.
        :rtype: int
        """
        return self._xmpp_component_retry_delay

    @xmpp_component_retry_delay.setter
    def xmpp_component_retry_delay(self, xmpp_component_retry_delay: int):
        """Sets the xmpp_component_retry_delay of this Xmpp.


        :param xmpp_component_retry_delay: The xmpp_component_retry_delay of this Xmpp.
        :type xmpp_component_retry_delay: int
        """

        self._xmpp_component_retry_delay = xmpp_component_retry_delay
