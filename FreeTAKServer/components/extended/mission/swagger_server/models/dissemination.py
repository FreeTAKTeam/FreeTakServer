# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Dissemination(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, smart_retry: bool=None, bounded_subscription_write: bool=None, enabled: bool=None):  # noqa: E501
        """Dissemination - a model defined in Swagger

        :param smart_retry: The smart_retry of this Dissemination.  # noqa: E501
        :type smart_retry: bool
        :param bounded_subscription_write: The bounded_subscription_write of this Dissemination.  # noqa: E501
        :type bounded_subscription_write: bool
        :param enabled: The enabled of this Dissemination.  # noqa: E501
        :type enabled: bool
        """
        self.swagger_types = {
            'smart_retry': bool,
            'bounded_subscription_write': bool,
            'enabled': bool
        }

        self.attribute_map = {
            'smart_retry': 'smartRetry',
            'bounded_subscription_write': 'boundedSubscriptionWrite',
            'enabled': 'enabled'
        }
        self._smart_retry = smart_retry
        self._bounded_subscription_write = bounded_subscription_write
        self._enabled = enabled

    @classmethod
    def from_dict(cls, dikt) -> 'Dissemination':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Dissemination of this Dissemination.  # noqa: E501
        :rtype: Dissemination
        """
        return util.deserialize_model(dikt, cls)

    @property
    def smart_retry(self) -> bool:
        """Gets the smart_retry of this Dissemination.


        :return: The smart_retry of this Dissemination.
        :rtype: bool
        """
        return self._smart_retry

    @smart_retry.setter
    def smart_retry(self, smart_retry: bool):
        """Sets the smart_retry of this Dissemination.


        :param smart_retry: The smart_retry of this Dissemination.
        :type smart_retry: bool
        """

        self._smart_retry = smart_retry

    @property
    def bounded_subscription_write(self) -> bool:
        """Gets the bounded_subscription_write of this Dissemination.


        :return: The bounded_subscription_write of this Dissemination.
        :rtype: bool
        """
        return self._bounded_subscription_write

    @bounded_subscription_write.setter
    def bounded_subscription_write(self, bounded_subscription_write: bool):
        """Sets the bounded_subscription_write of this Dissemination.


        :param bounded_subscription_write: The bounded_subscription_write of this Dissemination.
        :type bounded_subscription_write: bool
        """

        self._bounded_subscription_write = bounded_subscription_write

    @property
    def enabled(self) -> bool:
        """Gets the enabled of this Dissemination.


        :return: The enabled of this Dissemination.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled: bool):
        """Sets the enabled of this Dissemination.


        :param enabled: The enabled of this Dissemination.
        :type enabled: bool
        """

        self._enabled = enabled
