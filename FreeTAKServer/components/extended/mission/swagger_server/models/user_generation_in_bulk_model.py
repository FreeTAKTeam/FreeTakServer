# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UserGenerationInBulkModel(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, username_expression: str=None, start_n: int=None, end_n: int=None, group_list: List[str]=None, group_list_in: List[str]=None, group_list_out: List[str]=None):  # noqa: E501
        """UserGenerationInBulkModel - a model defined in Swagger

        :param username_expression: The username_expression of this UserGenerationInBulkModel.  # noqa: E501
        :type username_expression: str
        :param start_n: The start_n of this UserGenerationInBulkModel.  # noqa: E501
        :type start_n: int
        :param end_n: The end_n of this UserGenerationInBulkModel.  # noqa: E501
        :type end_n: int
        :param group_list: The group_list of this UserGenerationInBulkModel.  # noqa: E501
        :type group_list: List[str]
        :param group_list_in: The group_list_in of this UserGenerationInBulkModel.  # noqa: E501
        :type group_list_in: List[str]
        :param group_list_out: The group_list_out of this UserGenerationInBulkModel.  # noqa: E501
        :type group_list_out: List[str]
        """
        self.swagger_types = {
            'username_expression': str,
            'start_n': int,
            'end_n': int,
            'group_list': List[str],
            'group_list_in': List[str],
            'group_list_out': List[str]
        }

        self.attribute_map = {
            'username_expression': 'usernameExpression',
            'start_n': 'startN',
            'end_n': 'endN',
            'group_list': 'groupList',
            'group_list_in': 'groupListIN',
            'group_list_out': 'groupListOUT'
        }
        self._username_expression = username_expression
        self._start_n = start_n
        self._end_n = end_n
        self._group_list = group_list
        self._group_list_in = group_list_in
        self._group_list_out = group_list_out

    @classmethod
    def from_dict(cls, dikt) -> 'UserGenerationInBulkModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserGenerationInBulkModel of this UserGenerationInBulkModel.  # noqa: E501
        :rtype: UserGenerationInBulkModel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username_expression(self) -> str:
        """Gets the username_expression of this UserGenerationInBulkModel.


        :return: The username_expression of this UserGenerationInBulkModel.
        :rtype: str
        """
        return self._username_expression

    @username_expression.setter
    def username_expression(self, username_expression: str):
        """Sets the username_expression of this UserGenerationInBulkModel.


        :param username_expression: The username_expression of this UserGenerationInBulkModel.
        :type username_expression: str
        """

        self._username_expression = username_expression

    @property
    def start_n(self) -> int:
        """Gets the start_n of this UserGenerationInBulkModel.


        :return: The start_n of this UserGenerationInBulkModel.
        :rtype: int
        """
        return self._start_n

    @start_n.setter
    def start_n(self, start_n: int):
        """Sets the start_n of this UserGenerationInBulkModel.


        :param start_n: The start_n of this UserGenerationInBulkModel.
        :type start_n: int
        """

        self._start_n = start_n

    @property
    def end_n(self) -> int:
        """Gets the end_n of this UserGenerationInBulkModel.


        :return: The end_n of this UserGenerationInBulkModel.
        :rtype: int
        """
        return self._end_n

    @end_n.setter
    def end_n(self, end_n: int):
        """Sets the end_n of this UserGenerationInBulkModel.


        :param end_n: The end_n of this UserGenerationInBulkModel.
        :type end_n: int
        """

        self._end_n = end_n

    @property
    def group_list(self) -> List[str]:
        """Gets the group_list of this UserGenerationInBulkModel.


        :return: The group_list of this UserGenerationInBulkModel.
        :rtype: List[str]
        """
        return self._group_list

    @group_list.setter
    def group_list(self, group_list: List[str]):
        """Sets the group_list of this UserGenerationInBulkModel.


        :param group_list: The group_list of this UserGenerationInBulkModel.
        :type group_list: List[str]
        """

        self._group_list = group_list

    @property
    def group_list_in(self) -> List[str]:
        """Gets the group_list_in of this UserGenerationInBulkModel.


        :return: The group_list_in of this UserGenerationInBulkModel.
        :rtype: List[str]
        """
        return self._group_list_in

    @group_list_in.setter
    def group_list_in(self, group_list_in: List[str]):
        """Sets the group_list_in of this UserGenerationInBulkModel.


        :param group_list_in: The group_list_in of this UserGenerationInBulkModel.
        :type group_list_in: List[str]
        """

        self._group_list_in = group_list_in

    @property
    def group_list_out(self) -> List[str]:
        """Gets the group_list_out of this UserGenerationInBulkModel.


        :return: The group_list_out of this UserGenerationInBulkModel.
        :rtype: List[str]
        """
        return self._group_list_out

    @group_list_out.setter
    def group_list_out(self, group_list_out: List[str]):
        """Sets the group_list_out of this UserGenerationInBulkModel.


        :param group_list_out: The group_list_out of this UserGenerationInBulkModel.
        :type group_list_out: List[str]
        """

        self._group_list_out = group_list_out
