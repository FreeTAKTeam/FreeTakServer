# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AuthenticationConfigInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, url: str=None, user_string: str=None, update_interval: int=None, group_prefix: str=None, service_account_dn: str=None, service_account_credential: str=None, group_base_rdn: str=None):  # noqa: E501
        """AuthenticationConfigInfo - a model defined in Swagger

        :param url: The url of this AuthenticationConfigInfo.  # noqa: E501
        :type url: str
        :param user_string: The user_string of this AuthenticationConfigInfo.  # noqa: E501
        :type user_string: str
        :param update_interval: The update_interval of this AuthenticationConfigInfo.  # noqa: E501
        :type update_interval: int
        :param group_prefix: The group_prefix of this AuthenticationConfigInfo.  # noqa: E501
        :type group_prefix: str
        :param service_account_dn: The service_account_dn of this AuthenticationConfigInfo.  # noqa: E501
        :type service_account_dn: str
        :param service_account_credential: The service_account_credential of this AuthenticationConfigInfo.  # noqa: E501
        :type service_account_credential: str
        :param group_base_rdn: The group_base_rdn of this AuthenticationConfigInfo.  # noqa: E501
        :type group_base_rdn: str
        """
        self.swagger_types = {
            'url': str,
            'user_string': str,
            'update_interval': int,
            'group_prefix': str,
            'service_account_dn': str,
            'service_account_credential': str,
            'group_base_rdn': str
        }

        self.attribute_map = {
            'url': 'url',
            'user_string': 'userString',
            'update_interval': 'updateInterval',
            'group_prefix': 'groupPrefix',
            'service_account_dn': 'serviceAccountDN',
            'service_account_credential': 'serviceAccountCredential',
            'group_base_rdn': 'groupBaseRDN'
        }
        self._url = url
        self._user_string = user_string
        self._update_interval = update_interval
        self._group_prefix = group_prefix
        self._service_account_dn = service_account_dn
        self._service_account_credential = service_account_credential
        self._group_base_rdn = group_base_rdn

    @classmethod
    def from_dict(cls, dikt) -> 'AuthenticationConfigInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AuthenticationConfigInfo of this AuthenticationConfigInfo.  # noqa: E501
        :rtype: AuthenticationConfigInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self) -> str:
        """Gets the url of this AuthenticationConfigInfo.


        :return: The url of this AuthenticationConfigInfo.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this AuthenticationConfigInfo.


        :param url: The url of this AuthenticationConfigInfo.
        :type url: str
        """

        self._url = url

    @property
    def user_string(self) -> str:
        """Gets the user_string of this AuthenticationConfigInfo.


        :return: The user_string of this AuthenticationConfigInfo.
        :rtype: str
        """
        return self._user_string

    @user_string.setter
    def user_string(self, user_string: str):
        """Sets the user_string of this AuthenticationConfigInfo.


        :param user_string: The user_string of this AuthenticationConfigInfo.
        :type user_string: str
        """

        self._user_string = user_string

    @property
    def update_interval(self) -> int:
        """Gets the update_interval of this AuthenticationConfigInfo.


        :return: The update_interval of this AuthenticationConfigInfo.
        :rtype: int
        """
        return self._update_interval

    @update_interval.setter
    def update_interval(self, update_interval: int):
        """Sets the update_interval of this AuthenticationConfigInfo.


        :param update_interval: The update_interval of this AuthenticationConfigInfo.
        :type update_interval: int
        """

        self._update_interval = update_interval

    @property
    def group_prefix(self) -> str:
        """Gets the group_prefix of this AuthenticationConfigInfo.


        :return: The group_prefix of this AuthenticationConfigInfo.
        :rtype: str
        """
        return self._group_prefix

    @group_prefix.setter
    def group_prefix(self, group_prefix: str):
        """Sets the group_prefix of this AuthenticationConfigInfo.


        :param group_prefix: The group_prefix of this AuthenticationConfigInfo.
        :type group_prefix: str
        """

        self._group_prefix = group_prefix

    @property
    def service_account_dn(self) -> str:
        """Gets the service_account_dn of this AuthenticationConfigInfo.


        :return: The service_account_dn of this AuthenticationConfigInfo.
        :rtype: str
        """
        return self._service_account_dn

    @service_account_dn.setter
    def service_account_dn(self, service_account_dn: str):
        """Sets the service_account_dn of this AuthenticationConfigInfo.


        :param service_account_dn: The service_account_dn of this AuthenticationConfigInfo.
        :type service_account_dn: str
        """

        self._service_account_dn = service_account_dn

    @property
    def service_account_credential(self) -> str:
        """Gets the service_account_credential of this AuthenticationConfigInfo.


        :return: The service_account_credential of this AuthenticationConfigInfo.
        :rtype: str
        """
        return self._service_account_credential

    @service_account_credential.setter
    def service_account_credential(self, service_account_credential: str):
        """Sets the service_account_credential of this AuthenticationConfigInfo.


        :param service_account_credential: The service_account_credential of this AuthenticationConfigInfo.
        :type service_account_credential: str
        """

        self._service_account_credential = service_account_credential

    @property
    def group_base_rdn(self) -> str:
        """Gets the group_base_rdn of this AuthenticationConfigInfo.


        :return: The group_base_rdn of this AuthenticationConfigInfo.
        :rtype: str
        """
        return self._group_base_rdn

    @group_base_rdn.setter
    def group_base_rdn(self, group_base_rdn: str):
        """Sets the group_base_rdn of this AuthenticationConfigInfo.


        :param group_base_rdn: The group_base_rdn of this AuthenticationConfigInfo.
        :type group_base_rdn: str
        """

        self._group_base_rdn = group_base_rdn
