# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Repeatable(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, uid: str=None, repeat_type: str=None, cot_type: str=None, date_time_activated: datetime=None, xml: str=None, callsign: str=None):  # noqa: E501
        """Repeatable - a model defined in Swagger

        :param uid: The uid of this Repeatable.  # noqa: E501
        :type uid: str
        :param repeat_type: The repeat_type of this Repeatable.  # noqa: E501
        :type repeat_type: str
        :param cot_type: The cot_type of this Repeatable.  # noqa: E501
        :type cot_type: str
        :param date_time_activated: The date_time_activated of this Repeatable.  # noqa: E501
        :type date_time_activated: datetime
        :param xml: The xml of this Repeatable.  # noqa: E501
        :type xml: str
        :param callsign: The callsign of this Repeatable.  # noqa: E501
        :type callsign: str
        """
        self.swagger_types = {
            'uid': str,
            'repeat_type': str,
            'cot_type': str,
            'date_time_activated': datetime,
            'xml': str,
            'callsign': str
        }

        self.attribute_map = {
            'uid': 'uid',
            'repeat_type': 'repeatType',
            'cot_type': 'cotType',
            'date_time_activated': 'dateTimeActivated',
            'xml': 'xml',
            'callsign': 'callsign'
        }
        self._uid = uid
        self._repeat_type = repeat_type
        self._cot_type = cot_type
        self._date_time_activated = date_time_activated
        self._xml = xml
        self._callsign = callsign

    @classmethod
    def from_dict(cls, dikt) -> 'Repeatable':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Repeatable of this Repeatable.  # noqa: E501
        :rtype: Repeatable
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uid(self) -> str:
        """Gets the uid of this Repeatable.


        :return: The uid of this Repeatable.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid: str):
        """Sets the uid of this Repeatable.


        :param uid: The uid of this Repeatable.
        :type uid: str
        """

        self._uid = uid

    @property
    def repeat_type(self) -> str:
        """Gets the repeat_type of this Repeatable.


        :return: The repeat_type of this Repeatable.
        :rtype: str
        """
        return self._repeat_type

    @repeat_type.setter
    def repeat_type(self, repeat_type: str):
        """Sets the repeat_type of this Repeatable.


        :param repeat_type: The repeat_type of this Repeatable.
        :type repeat_type: str
        """

        self._repeat_type = repeat_type

    @property
    def cot_type(self) -> str:
        """Gets the cot_type of this Repeatable.


        :return: The cot_type of this Repeatable.
        :rtype: str
        """
        return self._cot_type

    @cot_type.setter
    def cot_type(self, cot_type: str):
        """Sets the cot_type of this Repeatable.


        :param cot_type: The cot_type of this Repeatable.
        :type cot_type: str
        """

        self._cot_type = cot_type

    @property
    def date_time_activated(self) -> datetime:
        """Gets the date_time_activated of this Repeatable.


        :return: The date_time_activated of this Repeatable.
        :rtype: datetime
        """
        return self._date_time_activated

    @date_time_activated.setter
    def date_time_activated(self, date_time_activated: datetime):
        """Sets the date_time_activated of this Repeatable.


        :param date_time_activated: The date_time_activated of this Repeatable.
        :type date_time_activated: datetime
        """

        self._date_time_activated = date_time_activated

    @property
    def xml(self) -> str:
        """Gets the xml of this Repeatable.


        :return: The xml of this Repeatable.
        :rtype: str
        """
        return self._xml

    @xml.setter
    def xml(self, xml: str):
        """Sets the xml of this Repeatable.


        :param xml: The xml of this Repeatable.
        :type xml: str
        """

        self._xml = xml

    @property
    def callsign(self) -> str:
        """Gets the callsign of this Repeatable.


        :return: The callsign of this Repeatable.
        :rtype: str
        """
        return self._callsign

    @callsign.setter
    def callsign(self, callsign: str):
        """Sets the callsign of this Repeatable.


        :param callsign: The callsign of this Repeatable.
        :type callsign: str
        """

        self._callsign = callsign
