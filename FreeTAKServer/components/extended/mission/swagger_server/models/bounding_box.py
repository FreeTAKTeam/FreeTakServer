# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class BoundingBox(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, min_longitude: float=None, min_latitude: float=None, max_longitude: float=None, max_latitude: float=None):  # noqa: E501
        """BoundingBox - a model defined in Swagger

        :param min_longitude: The min_longitude of this BoundingBox.  # noqa: E501
        :type min_longitude: float
        :param min_latitude: The min_latitude of this BoundingBox.  # noqa: E501
        :type min_latitude: float
        :param max_longitude: The max_longitude of this BoundingBox.  # noqa: E501
        :type max_longitude: float
        :param max_latitude: The max_latitude of this BoundingBox.  # noqa: E501
        :type max_latitude: float
        """
        self.swagger_types = {
            'min_longitude': float,
            'min_latitude': float,
            'max_longitude': float,
            'max_latitude': float
        }

        self.attribute_map = {
            'min_longitude': 'minLongitude',
            'min_latitude': 'minLatitude',
            'max_longitude': 'maxLongitude',
            'max_latitude': 'maxLatitude'
        }
        self._min_longitude = min_longitude
        self._min_latitude = min_latitude
        self._max_longitude = max_longitude
        self._max_latitude = max_latitude

    @classmethod
    def from_dict(cls, dikt) -> 'BoundingBox':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BoundingBox of this BoundingBox.  # noqa: E501
        :rtype: BoundingBox
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min_longitude(self) -> float:
        """Gets the min_longitude of this BoundingBox.


        :return: The min_longitude of this BoundingBox.
        :rtype: float
        """
        return self._min_longitude

    @min_longitude.setter
    def min_longitude(self, min_longitude: float):
        """Sets the min_longitude of this BoundingBox.


        :param min_longitude: The min_longitude of this BoundingBox.
        :type min_longitude: float
        """

        self._min_longitude = min_longitude

    @property
    def min_latitude(self) -> float:
        """Gets the min_latitude of this BoundingBox.


        :return: The min_latitude of this BoundingBox.
        :rtype: float
        """
        return self._min_latitude

    @min_latitude.setter
    def min_latitude(self, min_latitude: float):
        """Sets the min_latitude of this BoundingBox.


        :param min_latitude: The min_latitude of this BoundingBox.
        :type min_latitude: float
        """

        self._min_latitude = min_latitude

    @property
    def max_longitude(self) -> float:
        """Gets the max_longitude of this BoundingBox.


        :return: The max_longitude of this BoundingBox.
        :rtype: float
        """
        return self._max_longitude

    @max_longitude.setter
    def max_longitude(self, max_longitude: float):
        """Sets the max_longitude of this BoundingBox.


        :param max_longitude: The max_longitude of this BoundingBox.
        :type max_longitude: float
        """

        self._max_longitude = max_longitude

    @property
    def max_latitude(self) -> float:
        """Gets the max_latitude of this BoundingBox.


        :return: The max_latitude of this BoundingBox.
        :rtype: float
        """
        return self._max_latitude

    @max_latitude.setter
    def max_latitude(self, max_latitude: float):
        """Sets the max_latitude of this BoundingBox.


        :param max_latitude: The max_latitude of this BoundingBox.
        :type max_latitude: float
        """

        self._max_latitude = max_latitude
