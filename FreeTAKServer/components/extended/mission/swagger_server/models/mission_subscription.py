# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.mission import Mission  # noqa: F401,E501
from swagger_server.models.mission_role import MissionRole  # noqa: F401,E501
from swagger_server import util


class MissionSubscription(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, token: str=None, mission: Mission=None, client_uid: str=None, username: str=None, create_time: datetime=None, role: MissionRole=None):  # noqa: E501
        """MissionSubscription - a model defined in Swagger

        :param token: The token of this MissionSubscription.  # noqa: E501
        :type token: str
        :param mission: The mission of this MissionSubscription.  # noqa: E501
        :type mission: Mission
        :param client_uid: The client_uid of this MissionSubscription.  # noqa: E501
        :type client_uid: str
        :param username: The username of this MissionSubscription.  # noqa: E501
        :type username: str
        :param create_time: The create_time of this MissionSubscription.  # noqa: E501
        :type create_time: datetime
        :param role: The role of this MissionSubscription.  # noqa: E501
        :type role: MissionRole
        """
        self.swagger_types = {
            'token': str,
            'mission': Mission,
            'client_uid': str,
            'username': str,
            'create_time': datetime,
            'role': MissionRole
        }

        self.attribute_map = {
            'token': 'token',
            'mission': 'mission',
            'client_uid': 'clientUid',
            'username': 'username',
            'create_time': 'createTime',
            'role': 'role'
        }
        self._token = token
        self._mission = mission
        self._client_uid = client_uid
        self._username = username
        self._create_time = create_time
        self._role = role

    @classmethod
    def from_dict(cls, dikt) -> 'MissionSubscription':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MissionSubscription of this MissionSubscription.  # noqa: E501
        :rtype: MissionSubscription
        """
        return util.deserialize_model(dikt, cls)

    @property
    def token(self) -> str:
        """Gets the token of this MissionSubscription.


        :return: The token of this MissionSubscription.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token: str):
        """Sets the token of this MissionSubscription.


        :param token: The token of this MissionSubscription.
        :type token: str
        """

        self._token = token

    @property
    def mission(self) -> Mission:
        """Gets the mission of this MissionSubscription.


        :return: The mission of this MissionSubscription.
        :rtype: Mission
        """
        return self._mission

    @mission.setter
    def mission(self, mission: Mission):
        """Sets the mission of this MissionSubscription.


        :param mission: The mission of this MissionSubscription.
        :type mission: Mission
        """

        self._mission = mission

    @property
    def client_uid(self) -> str:
        """Gets the client_uid of this MissionSubscription.


        :return: The client_uid of this MissionSubscription.
        :rtype: str
        """
        return self._client_uid

    @client_uid.setter
    def client_uid(self, client_uid: str):
        """Sets the client_uid of this MissionSubscription.


        :param client_uid: The client_uid of this MissionSubscription.
        :type client_uid: str
        """

        self._client_uid = client_uid

    @property
    def username(self) -> str:
        """Gets the username of this MissionSubscription.


        :return: The username of this MissionSubscription.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this MissionSubscription.


        :param username: The username of this MissionSubscription.
        :type username: str
        """

        self._username = username

    @property
    def create_time(self) -> datetime:
        """Gets the create_time of this MissionSubscription.


        :return: The create_time of this MissionSubscription.
        :rtype: datetime
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time: datetime):
        """Sets the create_time of this MissionSubscription.


        :param create_time: The create_time of this MissionSubscription.
        :type create_time: datetime
        """

        self._create_time = create_time

    @property
    def role(self) -> MissionRole:
        """Gets the role of this MissionSubscription.


        :return: The role of this MissionSubscription.
        :rtype: MissionRole
        """
        return self._role

    @role.setter
    def role(self, role: MissionRole):
        """Sets the role of this MissionSubscription.


        :param role: The role of this MissionSubscription.
        :type role: MissionRole
        """

        self._role = role
