# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.endpoint import Endpoint  # noqa: F401,E501
from swagger_server import util


class Ferry(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, endpoint: List[Endpoint]=None, enable: bool=None, stale: int=None, webserver: str=None):  # noqa: E501
        """Ferry - a model defined in Swagger

        :param endpoint: The endpoint of this Ferry.  # noqa: E501
        :type endpoint: List[Endpoint]
        :param enable: The enable of this Ferry.  # noqa: E501
        :type enable: bool
        :param stale: The stale of this Ferry.  # noqa: E501
        :type stale: int
        :param webserver: The webserver of this Ferry.  # noqa: E501
        :type webserver: str
        """
        self.swagger_types = {
            'endpoint': List[Endpoint],
            'enable': bool,
            'stale': int,
            'webserver': str
        }

        self.attribute_map = {
            'endpoint': 'endpoint',
            'enable': 'enable',
            'stale': 'stale',
            'webserver': 'webserver'
        }
        self._endpoint = endpoint
        self._enable = enable
        self._stale = stale
        self._webserver = webserver

    @classmethod
    def from_dict(cls, dikt) -> 'Ferry':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Ferry of this Ferry.  # noqa: E501
        :rtype: Ferry
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint(self) -> List[Endpoint]:
        """Gets the endpoint of this Ferry.


        :return: The endpoint of this Ferry.
        :rtype: List[Endpoint]
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint: List[Endpoint]):
        """Sets the endpoint of this Ferry.


        :param endpoint: The endpoint of this Ferry.
        :type endpoint: List[Endpoint]
        """

        self._endpoint = endpoint

    @property
    def enable(self) -> bool:
        """Gets the enable of this Ferry.


        :return: The enable of this Ferry.
        :rtype: bool
        """
        return self._enable

    @enable.setter
    def enable(self, enable: bool):
        """Sets the enable of this Ferry.


        :param enable: The enable of this Ferry.
        :type enable: bool
        """

        self._enable = enable

    @property
    def stale(self) -> int:
        """Gets the stale of this Ferry.


        :return: The stale of this Ferry.
        :rtype: int
        """
        return self._stale

    @stale.setter
    def stale(self, stale: int):
        """Sets the stale of this Ferry.


        :param stale: The stale of this Ferry.
        :type stale: int
        """

        self._stale = stale

    @property
    def webserver(self) -> str:
        """Gets the webserver of this Ferry.


        :return: The webserver of this Ferry.
        :rtype: str
        """
        return self._webserver

    @webserver.setter
    def webserver(self, webserver: str):
        """Sets the webserver of this Ferry.


        :param webserver: The webserver of this Ferry.
        :type webserver: str
        """

        self._webserver = webserver
