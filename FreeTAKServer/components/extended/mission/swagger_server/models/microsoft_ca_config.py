# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MicrosoftCAConfig(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, username: str=None, password: str=None, truststore: str=None, truststore_pass: str=None, svc_url: str=None, template_name: str=None):  # noqa: E501
        """MicrosoftCAConfig - a model defined in Swagger

        :param username: The username of this MicrosoftCAConfig.  # noqa: E501
        :type username: str
        :param password: The password of this MicrosoftCAConfig.  # noqa: E501
        :type password: str
        :param truststore: The truststore of this MicrosoftCAConfig.  # noqa: E501
        :type truststore: str
        :param truststore_pass: The truststore_pass of this MicrosoftCAConfig.  # noqa: E501
        :type truststore_pass: str
        :param svc_url: The svc_url of this MicrosoftCAConfig.  # noqa: E501
        :type svc_url: str
        :param template_name: The template_name of this MicrosoftCAConfig.  # noqa: E501
        :type template_name: str
        """
        self.swagger_types = {
            'username': str,
            'password': str,
            'truststore': str,
            'truststore_pass': str,
            'svc_url': str,
            'template_name': str
        }

        self.attribute_map = {
            'username': 'username',
            'password': 'password',
            'truststore': 'truststore',
            'truststore_pass': 'truststorePass',
            'svc_url': 'svcUrl',
            'template_name': 'templateName'
        }
        self._username = username
        self._password = password
        self._truststore = truststore
        self._truststore_pass = truststore_pass
        self._svc_url = svc_url
        self._template_name = template_name

    @classmethod
    def from_dict(cls, dikt) -> 'MicrosoftCAConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MicrosoftCAConfig of this MicrosoftCAConfig.  # noqa: E501
        :rtype: MicrosoftCAConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self) -> str:
        """Gets the username of this MicrosoftCAConfig.


        :return: The username of this MicrosoftCAConfig.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this MicrosoftCAConfig.


        :param username: The username of this MicrosoftCAConfig.
        :type username: str
        """

        self._username = username

    @property
    def password(self) -> str:
        """Gets the password of this MicrosoftCAConfig.


        :return: The password of this MicrosoftCAConfig.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this MicrosoftCAConfig.


        :param password: The password of this MicrosoftCAConfig.
        :type password: str
        """

        self._password = password

    @property
    def truststore(self) -> str:
        """Gets the truststore of this MicrosoftCAConfig.


        :return: The truststore of this MicrosoftCAConfig.
        :rtype: str
        """
        return self._truststore

    @truststore.setter
    def truststore(self, truststore: str):
        """Sets the truststore of this MicrosoftCAConfig.


        :param truststore: The truststore of this MicrosoftCAConfig.
        :type truststore: str
        """

        self._truststore = truststore

    @property
    def truststore_pass(self) -> str:
        """Gets the truststore_pass of this MicrosoftCAConfig.


        :return: The truststore_pass of this MicrosoftCAConfig.
        :rtype: str
        """
        return self._truststore_pass

    @truststore_pass.setter
    def truststore_pass(self, truststore_pass: str):
        """Sets the truststore_pass of this MicrosoftCAConfig.


        :param truststore_pass: The truststore_pass of this MicrosoftCAConfig.
        :type truststore_pass: str
        """

        self._truststore_pass = truststore_pass

    @property
    def svc_url(self) -> str:
        """Gets the svc_url of this MicrosoftCAConfig.


        :return: The svc_url of this MicrosoftCAConfig.
        :rtype: str
        """
        return self._svc_url

    @svc_url.setter
    def svc_url(self, svc_url: str):
        """Sets the svc_url of this MicrosoftCAConfig.


        :param svc_url: The svc_url of this MicrosoftCAConfig.
        :type svc_url: str
        """

        self._svc_url = svc_url

    @property
    def template_name(self) -> str:
        """Gets the template_name of this MicrosoftCAConfig.


        :return: The template_name of this MicrosoftCAConfig.
        :rtype: str
        """
        return self._template_name

    @template_name.setter
    def template_name(self, template_name: str):
        """Sets the template_name of this MicrosoftCAConfig.


        :param template_name: The template_name of this MicrosoftCAConfig.
        :type template_name: str
        """

        self._template_name = template_name
