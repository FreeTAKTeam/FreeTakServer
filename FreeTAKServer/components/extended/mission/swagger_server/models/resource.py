# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.point import Point  # noqa: F401,E501
from swagger_server import util


class Resource(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, filename: str=None, keywords: List[str]=None, mime_type: str=None, content_type: str=None, name: str=None, submission_time: datetime=None, submitter: str=None, uid: str=None, creator_uid: str=None, hash: str=None, size: int=None, tool: str=None, location: Point=None, latitude: float=None, longitude: float=None, altitude: float=None):  # noqa: E501
        """Resource - a model defined in Swagger

        :param filename: The filename of this Resource.  # noqa: E501
        :type filename: str
        :param keywords: The keywords of this Resource.  # noqa: E501
        :type keywords: List[str]
        :param mime_type: The mime_type of this Resource.  # noqa: E501
        :type mime_type: str
        :param content_type: The content_type of this Resource.  # noqa: E501
        :type content_type: str
        :param name: The name of this Resource.  # noqa: E501
        :type name: str
        :param submission_time: The submission_time of this Resource.  # noqa: E501
        :type submission_time: datetime
        :param submitter: The submitter of this Resource.  # noqa: E501
        :type submitter: str
        :param uid: The uid of this Resource.  # noqa: E501
        :type uid: str
        :param creator_uid: The creator_uid of this Resource.  # noqa: E501
        :type creator_uid: str
        :param hash: The hash of this Resource.  # noqa: E501
        :type hash: str
        :param size: The size of this Resource.  # noqa: E501
        :type size: int
        :param tool: The tool of this Resource.  # noqa: E501
        :type tool: str
        :param location: The location of this Resource.  # noqa: E501
        :type location: Point
        :param latitude: The latitude of this Resource.  # noqa: E501
        :type latitude: float
        :param longitude: The longitude of this Resource.  # noqa: E501
        :type longitude: float
        :param altitude: The altitude of this Resource.  # noqa: E501
        :type altitude: float
        """
        self.swagger_types = {
            'filename': str,
            'keywords': List[str],
            'mime_type': str,
            'content_type': str,
            'name': str,
            'submission_time': datetime,
            'submitter': str,
            'uid': str,
            'creator_uid': str,
            'hash': str,
            'size': int,
            'tool': str,
            'location': Point,
            'latitude': float,
            'longitude': float,
            'altitude': float
        }

        self.attribute_map = {
            'filename': 'filename',
            'keywords': 'keywords',
            'mime_type': 'mimeType',
            'content_type': 'contentType',
            'name': 'name',
            'submission_time': 'submissionTime',
            'submitter': 'submitter',
            'uid': 'uid',
            'creator_uid': 'creatorUid',
            'hash': 'hash',
            'size': 'size',
            'tool': 'tool',
            'location': 'location',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'altitude': 'altitude'
        }
        self._filename = filename
        self._keywords = keywords
        self._mime_type = mime_type
        self._content_type = content_type
        self._name = name
        self._submission_time = submission_time
        self._submitter = submitter
        self._uid = uid
        self._creator_uid = creator_uid
        self._hash = hash
        self._size = size
        self._tool = tool
        self._location = location
        self._latitude = latitude
        self._longitude = longitude
        self._altitude = altitude

    @classmethod
    def from_dict(cls, dikt) -> 'Resource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Resource of this Resource.  # noqa: E501
        :rtype: Resource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filename(self) -> str:
        """Gets the filename of this Resource.


        :return: The filename of this Resource.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename: str):
        """Sets the filename of this Resource.


        :param filename: The filename of this Resource.
        :type filename: str
        """

        self._filename = filename

    @property
    def keywords(self) -> List[str]:
        """Gets the keywords of this Resource.


        :return: The keywords of this Resource.
        :rtype: List[str]
        """
        return self._keywords

    @keywords.setter
    def keywords(self, keywords: List[str]):
        """Sets the keywords of this Resource.


        :param keywords: The keywords of this Resource.
        :type keywords: List[str]
        """

        self._keywords = keywords

    @property
    def mime_type(self) -> str:
        """Gets the mime_type of this Resource.


        :return: The mime_type of this Resource.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type: str):
        """Sets the mime_type of this Resource.


        :param mime_type: The mime_type of this Resource.
        :type mime_type: str
        """

        self._mime_type = mime_type

    @property
    def content_type(self) -> str:
        """Gets the content_type of this Resource.


        :return: The content_type of this Resource.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type: str):
        """Sets the content_type of this Resource.


        :param content_type: The content_type of this Resource.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def name(self) -> str:
        """Gets the name of this Resource.


        :return: The name of this Resource.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Resource.


        :param name: The name of this Resource.
        :type name: str
        """

        self._name = name

    @property
    def submission_time(self) -> datetime:
        """Gets the submission_time of this Resource.


        :return: The submission_time of this Resource.
        :rtype: datetime
        """
        return self._submission_time

    @submission_time.setter
    def submission_time(self, submission_time: datetime):
        """Sets the submission_time of this Resource.


        :param submission_time: The submission_time of this Resource.
        :type submission_time: datetime
        """

        self._submission_time = submission_time

    @property
    def submitter(self) -> str:
        """Gets the submitter of this Resource.


        :return: The submitter of this Resource.
        :rtype: str
        """
        return self._submitter

    @submitter.setter
    def submitter(self, submitter: str):
        """Sets the submitter of this Resource.


        :param submitter: The submitter of this Resource.
        :type submitter: str
        """

        self._submitter = submitter

    @property
    def uid(self) -> str:
        """Gets the uid of this Resource.


        :return: The uid of this Resource.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid: str):
        """Sets the uid of this Resource.


        :param uid: The uid of this Resource.
        :type uid: str
        """

        self._uid = uid

    @property
    def creator_uid(self) -> str:
        """Gets the creator_uid of this Resource.


        :return: The creator_uid of this Resource.
        :rtype: str
        """
        return self._creator_uid

    @creator_uid.setter
    def creator_uid(self, creator_uid: str):
        """Sets the creator_uid of this Resource.


        :param creator_uid: The creator_uid of this Resource.
        :type creator_uid: str
        """

        self._creator_uid = creator_uid

    @property
    def hash(self) -> str:
        """Gets the hash of this Resource.


        :return: The hash of this Resource.
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash: str):
        """Sets the hash of this Resource.


        :param hash: The hash of this Resource.
        :type hash: str
        """

        self._hash = hash

    @property
    def size(self) -> int:
        """Gets the size of this Resource.


        :return: The size of this Resource.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size: int):
        """Sets the size of this Resource.


        :param size: The size of this Resource.
        :type size: int
        """

        self._size = size

    @property
    def tool(self) -> str:
        """Gets the tool of this Resource.


        :return: The tool of this Resource.
        :rtype: str
        """
        return self._tool

    @tool.setter
    def tool(self, tool: str):
        """Sets the tool of this Resource.


        :param tool: The tool of this Resource.
        :type tool: str
        """

        self._tool = tool

    @property
    def location(self) -> Point:
        """Gets the location of this Resource.


        :return: The location of this Resource.
        :rtype: Point
        """
        return self._location

    @location.setter
    def location(self, location: Point):
        """Sets the location of this Resource.


        :param location: The location of this Resource.
        :type location: Point
        """

        self._location = location

    @property
    def latitude(self) -> float:
        """Gets the latitude of this Resource.


        :return: The latitude of this Resource.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude: float):
        """Sets the latitude of this Resource.


        :param latitude: The latitude of this Resource.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self) -> float:
        """Gets the longitude of this Resource.


        :return: The longitude of this Resource.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude: float):
        """Sets the longitude of this Resource.


        :param longitude: The longitude of this Resource.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def altitude(self) -> float:
        """Gets the altitude of this Resource.


        :return: The altitude of this Resource.
        :rtype: float
        """
        return self._altitude

    @altitude.setter
    def altitude(self, altitude: float):
        """Sets the altitude of this Resource.


        :param altitude: The altitude of this Resource.
        :type altitude: float
        """

        self._altitude = altitude
