# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.group import Group  # noqa: F401,E501
from swagger_server.models.user import User  # noqa: F401,E501
from swagger_server import util


class UserGroups(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, user: User=None, groups: List[Group]=None):  # noqa: E501
        """UserGroups - a model defined in Swagger

        :param user: The user of this UserGroups.  # noqa: E501
        :type user: User
        :param groups: The groups of this UserGroups.  # noqa: E501
        :type groups: List[Group]
        """
        self.swagger_types = {
            'user': User,
            'groups': List[Group]
        }

        self.attribute_map = {
            'user': 'user',
            'groups': 'groups'
        }
        self._user = user
        self._groups = groups

    @classmethod
    def from_dict(cls, dikt) -> 'UserGroups':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserGroups of this UserGroups.  # noqa: E501
        :rtype: UserGroups
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user(self) -> User:
        """Gets the user of this UserGroups.


        :return: The user of this UserGroups.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user: User):
        """Sets the user of this UserGroups.


        :param user: The user of this UserGroups.
        :type user: User
        """

        self._user = user

    @property
    def groups(self) -> List[Group]:
        """Gets the groups of this UserGroups.


        :return: The groups of this UserGroups.
        :rtype: List[Group]
        """
        return self._groups

    @groups.setter
    def groups(self, groups: List[Group]):
        """Sets the groups of this UserGroups.


        :param groups: The groups of this UserGroups.
        :type groups: List[Group]
        """

        self._groups = groups
