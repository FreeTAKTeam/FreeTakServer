# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.static import Static  # noqa: F401,E501
from swagger_server import util


class Subscription(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, reload_persistent: bool=None, static: List[Static]=None):  # noqa: E501
        """Subscription - a model defined in Swagger

        :param reload_persistent: The reload_persistent of this Subscription.  # noqa: E501
        :type reload_persistent: bool
        :param static: The static of this Subscription.  # noqa: E501
        :type static: List[Static]
        """
        self.swagger_types = {
            'reload_persistent': bool,
            'static': List[Static]
        }

        self.attribute_map = {
            'reload_persistent': 'reloadPersistent',
            'static': 'static'
        }
        self._reload_persistent = reload_persistent
        self._static = static

    @classmethod
    def from_dict(cls, dikt) -> 'Subscription':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Subscription of this Subscription.  # noqa: E501
        :rtype: Subscription
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reload_persistent(self) -> bool:
        """Gets the reload_persistent of this Subscription.


        :return: The reload_persistent of this Subscription.
        :rtype: bool
        """
        return self._reload_persistent

    @reload_persistent.setter
    def reload_persistent(self, reload_persistent: bool):
        """Sets the reload_persistent of this Subscription.


        :param reload_persistent: The reload_persistent of this Subscription.
        :type reload_persistent: bool
        """

        self._reload_persistent = reload_persistent

    @property
    def static(self) -> List[Static]:
        """Gets the static of this Subscription.


        :return: The static of this Subscription.
        :rtype: List[Static]
        """
        return self._static

    @static.setter
    def static(self, static: List[Static]):
        """Sets the static of this Subscription.


        :param static: The static of this Subscription.
        :type static: List[Static]
        """

        self._static = static
