# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class FederateCA(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, inbound_group: List[str]=None, outbound_group: List[str]=None, fingerprint: str=None):  # noqa: E501
        """FederateCA - a model defined in Swagger

        :param inbound_group: The inbound_group of this FederateCA.  # noqa: E501
        :type inbound_group: List[str]
        :param outbound_group: The outbound_group of this FederateCA.  # noqa: E501
        :type outbound_group: List[str]
        :param fingerprint: The fingerprint of this FederateCA.  # noqa: E501
        :type fingerprint: str
        """
        self.swagger_types = {
            'inbound_group': List[str],
            'outbound_group': List[str],
            'fingerprint': str
        }

        self.attribute_map = {
            'inbound_group': 'inboundGroup',
            'outbound_group': 'outboundGroup',
            'fingerprint': 'fingerprint'
        }
        self._inbound_group = inbound_group
        self._outbound_group = outbound_group
        self._fingerprint = fingerprint

    @classmethod
    def from_dict(cls, dikt) -> 'FederateCA':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FederateCA of this FederateCA.  # noqa: E501
        :rtype: FederateCA
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inbound_group(self) -> List[str]:
        """Gets the inbound_group of this FederateCA.


        :return: The inbound_group of this FederateCA.
        :rtype: List[str]
        """
        return self._inbound_group

    @inbound_group.setter
    def inbound_group(self, inbound_group: List[str]):
        """Sets the inbound_group of this FederateCA.


        :param inbound_group: The inbound_group of this FederateCA.
        :type inbound_group: List[str]
        """

        self._inbound_group = inbound_group

    @property
    def outbound_group(self) -> List[str]:
        """Gets the outbound_group of this FederateCA.


        :return: The outbound_group of this FederateCA.
        :rtype: List[str]
        """
        return self._outbound_group

    @outbound_group.setter
    def outbound_group(self, outbound_group: List[str]):
        """Sets the outbound_group of this FederateCA.


        :param outbound_group: The outbound_group of this FederateCA.
        :type outbound_group: List[str]
        """

        self._outbound_group = outbound_group

    @property
    def fingerprint(self) -> str:
        """Gets the fingerprint of this FederateCA.


        :return: The fingerprint of this FederateCA.
        :rtype: str
        """
        return self._fingerprint

    @fingerprint.setter
    def fingerprint(self, fingerprint: str):
        """Sets the fingerprint of this FederateCA.


        :param fingerprint: The fingerprint of this FederateCA.
        :type fingerprint: str
        """

        self._fingerprint = fingerprint
