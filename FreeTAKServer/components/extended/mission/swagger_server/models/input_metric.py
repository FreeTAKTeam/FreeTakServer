# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.input import Input  # noqa: F401,E501
from swagger_server.models.input_metric_bytes_recieveds import InputMetricBytesRecieveds  # noqa: F401,E501
from swagger_server.models.input_metric_reads_received import InputMetricReadsReceived  # noqa: F401,E501
from swagger_server import util


class InputMetric(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, input: Input=None, reads_received: InputMetricReadsReceived=None, messages_received: InputMetricReadsReceived=None, num_clients: InputMetricReadsReceived=None, bytes_recieved: InputMetricReadsReceived=None, bytes_recieveds: InputMetricBytesRecieveds=None):  # noqa: E501
        """InputMetric - a model defined in Swagger

        :param id: The id of this InputMetric.  # noqa: E501
        :type id: str
        :param input: The input of this InputMetric.  # noqa: E501
        :type input: Input
        :param reads_received: The reads_received of this InputMetric.  # noqa: E501
        :type reads_received: InputMetricReadsReceived
        :param messages_received: The messages_received of this InputMetric.  # noqa: E501
        :type messages_received: InputMetricReadsReceived
        :param num_clients: The num_clients of this InputMetric.  # noqa: E501
        :type num_clients: InputMetricReadsReceived
        :param bytes_recieved: The bytes_recieved of this InputMetric.  # noqa: E501
        :type bytes_recieved: InputMetricReadsReceived
        :param bytes_recieveds: The bytes_recieveds of this InputMetric.  # noqa: E501
        :type bytes_recieveds: InputMetricBytesRecieveds
        """
        self.swagger_types = {
            'id': str,
            'input': Input,
            'reads_received': InputMetricReadsReceived,
            'messages_received': InputMetricReadsReceived,
            'num_clients': InputMetricReadsReceived,
            'bytes_recieved': InputMetricReadsReceived,
            'bytes_recieveds': InputMetricBytesRecieveds
        }

        self.attribute_map = {
            'id': 'id',
            'input': 'input',
            'reads_received': 'readsReceived',
            'messages_received': 'messagesReceived',
            'num_clients': 'numClients',
            'bytes_recieved': 'bytesRecieved',
            'bytes_recieveds': 'bytesRecieveds'
        }
        self._id = id
        self._input = input
        self._reads_received = reads_received
        self._messages_received = messages_received
        self._num_clients = num_clients
        self._bytes_recieved = bytes_recieved
        self._bytes_recieveds = bytes_recieveds

    @classmethod
    def from_dict(cls, dikt) -> 'InputMetric':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InputMetric of this InputMetric.  # noqa: E501
        :rtype: InputMetric
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this InputMetric.


        :return: The id of this InputMetric.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this InputMetric.


        :param id: The id of this InputMetric.
        :type id: str
        """

        self._id = id

    @property
    def input(self) -> Input:
        """Gets the input of this InputMetric.


        :return: The input of this InputMetric.
        :rtype: Input
        """
        return self._input

    @input.setter
    def input(self, input: Input):
        """Sets the input of this InputMetric.


        :param input: The input of this InputMetric.
        :type input: Input
        """

        self._input = input

    @property
    def reads_received(self) -> InputMetricReadsReceived:
        """Gets the reads_received of this InputMetric.


        :return: The reads_received of this InputMetric.
        :rtype: InputMetricReadsReceived
        """
        return self._reads_received

    @reads_received.setter
    def reads_received(self, reads_received: InputMetricReadsReceived):
        """Sets the reads_received of this InputMetric.


        :param reads_received: The reads_received of this InputMetric.
        :type reads_received: InputMetricReadsReceived
        """

        self._reads_received = reads_received

    @property
    def messages_received(self) -> InputMetricReadsReceived:
        """Gets the messages_received of this InputMetric.


        :return: The messages_received of this InputMetric.
        :rtype: InputMetricReadsReceived
        """
        return self._messages_received

    @messages_received.setter
    def messages_received(self, messages_received: InputMetricReadsReceived):
        """Sets the messages_received of this InputMetric.


        :param messages_received: The messages_received of this InputMetric.
        :type messages_received: InputMetricReadsReceived
        """

        self._messages_received = messages_received

    @property
    def num_clients(self) -> InputMetricReadsReceived:
        """Gets the num_clients of this InputMetric.


        :return: The num_clients of this InputMetric.
        :rtype: InputMetricReadsReceived
        """
        return self._num_clients

    @num_clients.setter
    def num_clients(self, num_clients: InputMetricReadsReceived):
        """Sets the num_clients of this InputMetric.


        :param num_clients: The num_clients of this InputMetric.
        :type num_clients: InputMetricReadsReceived
        """

        self._num_clients = num_clients

    @property
    def bytes_recieved(self) -> InputMetricReadsReceived:
        """Gets the bytes_recieved of this InputMetric.


        :return: The bytes_recieved of this InputMetric.
        :rtype: InputMetricReadsReceived
        """
        return self._bytes_recieved

    @bytes_recieved.setter
    def bytes_recieved(self, bytes_recieved: InputMetricReadsReceived):
        """Sets the bytes_recieved of this InputMetric.


        :param bytes_recieved: The bytes_recieved of this InputMetric.
        :type bytes_recieved: InputMetricReadsReceived
        """

        self._bytes_recieved = bytes_recieved

    @property
    def bytes_recieveds(self) -> InputMetricBytesRecieveds:
        """Gets the bytes_recieveds of this InputMetric.


        :return: The bytes_recieveds of this InputMetric.
        :rtype: InputMetricBytesRecieveds
        """
        return self._bytes_recieveds

    @bytes_recieveds.setter
    def bytes_recieveds(self, bytes_recieveds: InputMetricBytesRecieveds):
        """Sets the bytes_recieveds of this InputMetric.


        :param bytes_recieveds: The bytes_recieveds of this InputMetric.
        :type bytes_recieveds: InputMetricBytesRecieveds
        """

        self._bytes_recieveds = bytes_recieveds
