# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ClientEndpoint(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, callsign: str=None, uid: str=None, username: str=None, last_event_time: datetime=None, last_status: str=None):  # noqa: E501
        """ClientEndpoint - a model defined in Swagger

        :param callsign: The callsign of this ClientEndpoint.  # noqa: E501
        :type callsign: str
        :param uid: The uid of this ClientEndpoint.  # noqa: E501
        :type uid: str
        :param username: The username of this ClientEndpoint.  # noqa: E501
        :type username: str
        :param last_event_time: The last_event_time of this ClientEndpoint.  # noqa: E501
        :type last_event_time: datetime
        :param last_status: The last_status of this ClientEndpoint.  # noqa: E501
        :type last_status: str
        """
        self.swagger_types = {
            'callsign': str,
            'uid': str,
            'username': str,
            'last_event_time': datetime,
            'last_status': str
        }

        self.attribute_map = {
            'callsign': 'callsign',
            'uid': 'uid',
            'username': 'username',
            'last_event_time': 'lastEventTime',
            'last_status': 'lastStatus'
        }
        self._callsign = callsign
        self._uid = uid
        self._username = username
        self._last_event_time = last_event_time
        self._last_status = last_status

    @classmethod
    def from_dict(cls, dikt) -> 'ClientEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ClientEndpoint of this ClientEndpoint.  # noqa: E501
        :rtype: ClientEndpoint
        """
        return util.deserialize_model(dikt, cls)

    @property
    def callsign(self) -> str:
        """Gets the callsign of this ClientEndpoint.


        :return: The callsign of this ClientEndpoint.
        :rtype: str
        """
        return self._callsign

    @callsign.setter
    def callsign(self, callsign: str):
        """Sets the callsign of this ClientEndpoint.


        :param callsign: The callsign of this ClientEndpoint.
        :type callsign: str
        """

        self._callsign = callsign

    @property
    def uid(self) -> str:
        """Gets the uid of this ClientEndpoint.


        :return: The uid of this ClientEndpoint.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid: str):
        """Sets the uid of this ClientEndpoint.


        :param uid: The uid of this ClientEndpoint.
        :type uid: str
        """

        self._uid = uid

    @property
    def username(self) -> str:
        """Gets the username of this ClientEndpoint.


        :return: The username of this ClientEndpoint.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this ClientEndpoint.


        :param username: The username of this ClientEndpoint.
        :type username: str
        """

        self._username = username

    @property
    def last_event_time(self) -> datetime:
        """Gets the last_event_time of this ClientEndpoint.


        :return: The last_event_time of this ClientEndpoint.
        :rtype: datetime
        """
        return self._last_event_time

    @last_event_time.setter
    def last_event_time(self, last_event_time: datetime):
        """Sets the last_event_time of this ClientEndpoint.


        :param last_event_time: The last_event_time of this ClientEndpoint.
        :type last_event_time: datetime
        """

        self._last_event_time = last_event_time

    @property
    def last_status(self) -> str:
        """Gets the last_status of this ClientEndpoint.


        :return: The last_status of this ClientEndpoint.
        :rtype: str
        """
        return self._last_status

    @last_status.setter
    def last_status(self, last_status: str):
        """Sets the last_status of this ClientEndpoint.


        :param last_status: The last_status of this ClientEndpoint.
        :type last_status: str
        """

        self._last_status = last_status
