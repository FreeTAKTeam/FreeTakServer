# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.video_connection import VideoConnection  # noqa: F401,E501
from swagger_server import util


class VideoCollections(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, video_connections: List[VideoConnection]=None):  # noqa: E501
        """VideoCollections - a model defined in Swagger

        :param video_connections: The video_connections of this VideoCollections.  # noqa: E501
        :type video_connections: List[VideoConnection]
        """
        self.swagger_types = {
            'video_connections': List[VideoConnection]
        }

        self.attribute_map = {
            'video_connections': 'videoConnections'
        }
        self._video_connections = video_connections

    @classmethod
    def from_dict(cls, dikt) -> 'VideoCollections':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VideoCollections of this VideoCollections.  # noqa: E501
        :rtype: VideoCollections
        """
        return util.deserialize_model(dikt, cls)

    @property
    def video_connections(self) -> List[VideoConnection]:
        """Gets the video_connections of this VideoCollections.


        :return: The video_connections of this VideoCollections.
        :rtype: List[VideoConnection]
        """
        return self._video_connections

    @video_connections.setter
    def video_connections(self, video_connections: List[VideoConnection]):
        """Sets the video_connections of this VideoCollections.


        :param video_connections: The video_connections of this VideoCollections.
        :type video_connections: List[VideoConnection]
        """

        self._video_connections = video_connections
