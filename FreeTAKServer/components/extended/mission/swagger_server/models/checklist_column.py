# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ChecklistColumn(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, column_name: str=None, column_type: str=None, column_width: int=None, column_bg_color: str=None, column_text_color: str=None, column_editable: bool=None):  # noqa: E501
        """ChecklistColumn - a model defined in Swagger

        :param column_name: The column_name of this ChecklistColumn.  # noqa: E501
        :type column_name: str
        :param column_type: The column_type of this ChecklistColumn.  # noqa: E501
        :type column_type: str
        :param column_width: The column_width of this ChecklistColumn.  # noqa: E501
        :type column_width: int
        :param column_bg_color: The column_bg_color of this ChecklistColumn.  # noqa: E501
        :type column_bg_color: str
        :param column_text_color: The column_text_color of this ChecklistColumn.  # noqa: E501
        :type column_text_color: str
        :param column_editable: The column_editable of this ChecklistColumn.  # noqa: E501
        :type column_editable: bool
        """
        self.swagger_types = {
            'column_name': str,
            'column_type': str,
            'column_width': int,
            'column_bg_color': str,
            'column_text_color': str,
            'column_editable': bool
        }

        self.attribute_map = {
            'column_name': 'columnName',
            'column_type': 'columnType',
            'column_width': 'columnWidth',
            'column_bg_color': 'columnBgColor',
            'column_text_color': 'columnTextColor',
            'column_editable': 'columnEditable'
        }
        self._column_name = column_name
        self._column_type = column_type
        self._column_width = column_width
        self._column_bg_color = column_bg_color
        self._column_text_color = column_text_color
        self._column_editable = column_editable

    @classmethod
    def from_dict(cls, dikt) -> 'ChecklistColumn':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChecklistColumn of this ChecklistColumn.  # noqa: E501
        :rtype: ChecklistColumn
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_name(self) -> str:
        """Gets the column_name of this ChecklistColumn.


        :return: The column_name of this ChecklistColumn.
        :rtype: str
        """
        return self._column_name

    @column_name.setter
    def column_name(self, column_name: str):
        """Sets the column_name of this ChecklistColumn.


        :param column_name: The column_name of this ChecklistColumn.
        :type column_name: str
        """
        if column_name is None:
            raise ValueError("Invalid value for `column_name`, must not be `None`")  # noqa: E501

        self._column_name = column_name

    @property
    def column_type(self) -> str:
        """Gets the column_type of this ChecklistColumn.


        :return: The column_type of this ChecklistColumn.
        :rtype: str
        """
        return self._column_type

    @column_type.setter
    def column_type(self, column_type: str):
        """Sets the column_type of this ChecklistColumn.


        :param column_type: The column_type of this ChecklistColumn.
        :type column_type: str
        """
        allowed_values = ["SHORT_STRING", "LONG_STRING", "INTEGER", "ACTUAL_TIME", "RELATIVE_TIME"]  # noqa: E501
        if column_type not in allowed_values:
            raise ValueError(
                "Invalid value for `column_type` ({0}), must be one of {1}"
                .format(column_type, allowed_values)
            )

        self._column_type = column_type

    @property
    def column_width(self) -> int:
        """Gets the column_width of this ChecklistColumn.


        :return: The column_width of this ChecklistColumn.
        :rtype: int
        """
        return self._column_width

    @column_width.setter
    def column_width(self, column_width: int):
        """Sets the column_width of this ChecklistColumn.


        :param column_width: The column_width of this ChecklistColumn.
        :type column_width: int
        """

        self._column_width = column_width

    @property
    def column_bg_color(self) -> str:
        """Gets the column_bg_color of this ChecklistColumn.


        :return: The column_bg_color of this ChecklistColumn.
        :rtype: str
        """
        return self._column_bg_color

    @column_bg_color.setter
    def column_bg_color(self, column_bg_color: str):
        """Sets the column_bg_color of this ChecklistColumn.


        :param column_bg_color: The column_bg_color of this ChecklistColumn.
        :type column_bg_color: str
        """

        self._column_bg_color = column_bg_color

    @property
    def column_text_color(self) -> str:
        """Gets the column_text_color of this ChecklistColumn.


        :return: The column_text_color of this ChecklistColumn.
        :rtype: str
        """
        return self._column_text_color

    @column_text_color.setter
    def column_text_color(self, column_text_color: str):
        """Sets the column_text_color of this ChecklistColumn.


        :param column_text_color: The column_text_color of this ChecklistColumn.
        :type column_text_color: str
        """

        self._column_text_color = column_text_color

    @property
    def column_editable(self) -> bool:
        """Gets the column_editable of this ChecklistColumn.


        :return: The column_editable of this ChecklistColumn.
        :rtype: bool
        """
        return self._column_editable

    @column_editable.setter
    def column_editable(self, column_editable: bool):
        """Sets the column_editable of this ChecklistColumn.


        :param column_editable: The column_editable of this ChecklistColumn.
        :type column_editable: bool
        """

        self._column_editable = column_editable
