# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.rate_limit_rule import RateLimitRule  # noqa: F401,E501
from swagger_server import util


class DeliveryRateLimiter(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, rate_limit_rule: List[RateLimitRule]=None, enabled: bool=None):  # noqa: E501
        """DeliveryRateLimiter - a model defined in Swagger

        :param rate_limit_rule: The rate_limit_rule of this DeliveryRateLimiter.  # noqa: E501
        :type rate_limit_rule: List[RateLimitRule]
        :param enabled: The enabled of this DeliveryRateLimiter.  # noqa: E501
        :type enabled: bool
        """
        self.swagger_types = {
            'rate_limit_rule': List[RateLimitRule],
            'enabled': bool
        }

        self.attribute_map = {
            'rate_limit_rule': 'rateLimitRule',
            'enabled': 'enabled'
        }
        self._rate_limit_rule = rate_limit_rule
        self._enabled = enabled

    @classmethod
    def from_dict(cls, dikt) -> 'DeliveryRateLimiter':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeliveryRateLimiter of this DeliveryRateLimiter.  # noqa: E501
        :rtype: DeliveryRateLimiter
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rate_limit_rule(self) -> List[RateLimitRule]:
        """Gets the rate_limit_rule of this DeliveryRateLimiter.


        :return: The rate_limit_rule of this DeliveryRateLimiter.
        :rtype: List[RateLimitRule]
        """
        return self._rate_limit_rule

    @rate_limit_rule.setter
    def rate_limit_rule(self, rate_limit_rule: List[RateLimitRule]):
        """Sets the rate_limit_rule of this DeliveryRateLimiter.


        :param rate_limit_rule: The rate_limit_rule of this DeliveryRateLimiter.
        :type rate_limit_rule: List[RateLimitRule]
        """

        self._rate_limit_rule = rate_limit_rule

    @property
    def enabled(self) -> bool:
        """Gets the enabled of this DeliveryRateLimiter.


        :return: The enabled of this DeliveryRateLimiter.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled: bool):
        """Sets the enabled of this DeliveryRateLimiter.


        :param enabled: The enabled of this DeliveryRateLimiter.
        :type enabled: bool
        """

        self._enabled = enabled
