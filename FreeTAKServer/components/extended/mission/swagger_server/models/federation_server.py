# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.federation_port import FederationPort  # noqa: F401,E501
from swagger_server.models.tls import Tls  # noqa: F401,E501
from swagger_server.models.v1_tls import V1Tls  # noqa: F401,E501
from swagger_server import util


class FederationServer(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, tls: Tls=None, federation_port: List[FederationPort]=None, v1_tls: List[V1Tls]=None, port: int=None, core_version: int=None, v1_enabled: bool=None, v2_port: int=None, v2_enabled: bool=None, web_base_url: str=None, https_port: int=None, health_check_interval_seconds: int=None, initialization_delay_seconds: int=None, max_message_size_bytes: int=None):  # noqa: E501
        """FederationServer - a model defined in Swagger

        :param tls: The tls of this FederationServer.  # noqa: E501
        :type tls: Tls
        :param federation_port: The federation_port of this FederationServer.  # noqa: E501
        :type federation_port: List[FederationPort]
        :param v1_tls: The v1_tls of this FederationServer.  # noqa: E501
        :type v1_tls: List[V1Tls]
        :param port: The port of this FederationServer.  # noqa: E501
        :type port: int
        :param core_version: The core_version of this FederationServer.  # noqa: E501
        :type core_version: int
        :param v1_enabled: The v1_enabled of this FederationServer.  # noqa: E501
        :type v1_enabled: bool
        :param v2_port: The v2_port of this FederationServer.  # noqa: E501
        :type v2_port: int
        :param v2_enabled: The v2_enabled of this FederationServer.  # noqa: E501
        :type v2_enabled: bool
        :param web_base_url: The web_base_url of this FederationServer.  # noqa: E501
        :type web_base_url: str
        :param https_port: The https_port of this FederationServer.  # noqa: E501
        :type https_port: int
        :param health_check_interval_seconds: The health_check_interval_seconds of this FederationServer.  # noqa: E501
        :type health_check_interval_seconds: int
        :param initialization_delay_seconds: The initialization_delay_seconds of this FederationServer.  # noqa: E501
        :type initialization_delay_seconds: int
        :param max_message_size_bytes: The max_message_size_bytes of this FederationServer.  # noqa: E501
        :type max_message_size_bytes: int
        """
        self.swagger_types = {
            'tls': Tls,
            'federation_port': List[FederationPort],
            'v1_tls': List[V1Tls],
            'port': int,
            'core_version': int,
            'v1_enabled': bool,
            'v2_port': int,
            'v2_enabled': bool,
            'web_base_url': str,
            'https_port': int,
            'health_check_interval_seconds': int,
            'initialization_delay_seconds': int,
            'max_message_size_bytes': int
        }

        self.attribute_map = {
            'tls': 'tls',
            'federation_port': 'federationPort',
            'v1_tls': 'v1Tls',
            'port': 'port',
            'core_version': 'coreVersion',
            'v1_enabled': 'v1Enabled',
            'v2_port': 'v2Port',
            'v2_enabled': 'v2Enabled',
            'web_base_url': 'webBaseUrl',
            'https_port': 'httpsPort',
            'health_check_interval_seconds': 'healthCheckIntervalSeconds',
            'initialization_delay_seconds': 'initializationDelaySeconds',
            'max_message_size_bytes': 'maxMessageSizeBytes'
        }
        self._tls = tls
        self._federation_port = federation_port
        self._v1_tls = v1_tls
        self._port = port
        self._core_version = core_version
        self._v1_enabled = v1_enabled
        self._v2_port = v2_port
        self._v2_enabled = v2_enabled
        self._web_base_url = web_base_url
        self._https_port = https_port
        self._health_check_interval_seconds = health_check_interval_seconds
        self._initialization_delay_seconds = initialization_delay_seconds
        self._max_message_size_bytes = max_message_size_bytes

    @classmethod
    def from_dict(cls, dikt) -> 'FederationServer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FederationServer of this FederationServer.  # noqa: E501
        :rtype: FederationServer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tls(self) -> Tls:
        """Gets the tls of this FederationServer.


        :return: The tls of this FederationServer.
        :rtype: Tls
        """
        return self._tls

    @tls.setter
    def tls(self, tls: Tls):
        """Sets the tls of this FederationServer.


        :param tls: The tls of this FederationServer.
        :type tls: Tls
        """
        if tls is None:
            raise ValueError("Invalid value for `tls`, must not be `None`")  # noqa: E501

        self._tls = tls

    @property
    def federation_port(self) -> List[FederationPort]:
        """Gets the federation_port of this FederationServer.


        :return: The federation_port of this FederationServer.
        :rtype: List[FederationPort]
        """
        return self._federation_port

    @federation_port.setter
    def federation_port(self, federation_port: List[FederationPort]):
        """Sets the federation_port of this FederationServer.


        :param federation_port: The federation_port of this FederationServer.
        :type federation_port: List[FederationPort]
        """

        self._federation_port = federation_port

    @property
    def v1_tls(self) -> List[V1Tls]:
        """Gets the v1_tls of this FederationServer.


        :return: The v1_tls of this FederationServer.
        :rtype: List[V1Tls]
        """
        return self._v1_tls

    @v1_tls.setter
    def v1_tls(self, v1_tls: List[V1Tls]):
        """Sets the v1_tls of this FederationServer.


        :param v1_tls: The v1_tls of this FederationServer.
        :type v1_tls: List[V1Tls]
        """

        self._v1_tls = v1_tls

    @property
    def port(self) -> int:
        """Gets the port of this FederationServer.


        :return: The port of this FederationServer.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port: int):
        """Sets the port of this FederationServer.


        :param port: The port of this FederationServer.
        :type port: int
        """

        self._port = port

    @property
    def core_version(self) -> int:
        """Gets the core_version of this FederationServer.


        :return: The core_version of this FederationServer.
        :rtype: int
        """
        return self._core_version

    @core_version.setter
    def core_version(self, core_version: int):
        """Sets the core_version of this FederationServer.


        :param core_version: The core_version of this FederationServer.
        :type core_version: int
        """

        self._core_version = core_version

    @property
    def v1_enabled(self) -> bool:
        """Gets the v1_enabled of this FederationServer.


        :return: The v1_enabled of this FederationServer.
        :rtype: bool
        """
        return self._v1_enabled

    @v1_enabled.setter
    def v1_enabled(self, v1_enabled: bool):
        """Sets the v1_enabled of this FederationServer.


        :param v1_enabled: The v1_enabled of this FederationServer.
        :type v1_enabled: bool
        """

        self._v1_enabled = v1_enabled

    @property
    def v2_port(self) -> int:
        """Gets the v2_port of this FederationServer.


        :return: The v2_port of this FederationServer.
        :rtype: int
        """
        return self._v2_port

    @v2_port.setter
    def v2_port(self, v2_port: int):
        """Sets the v2_port of this FederationServer.


        :param v2_port: The v2_port of this FederationServer.
        :type v2_port: int
        """

        self._v2_port = v2_port

    @property
    def v2_enabled(self) -> bool:
        """Gets the v2_enabled of this FederationServer.


        :return: The v2_enabled of this FederationServer.
        :rtype: bool
        """
        return self._v2_enabled

    @v2_enabled.setter
    def v2_enabled(self, v2_enabled: bool):
        """Sets the v2_enabled of this FederationServer.


        :param v2_enabled: The v2_enabled of this FederationServer.
        :type v2_enabled: bool
        """

        self._v2_enabled = v2_enabled

    @property
    def web_base_url(self) -> str:
        """Gets the web_base_url of this FederationServer.


        :return: The web_base_url of this FederationServer.
        :rtype: str
        """
        return self._web_base_url

    @web_base_url.setter
    def web_base_url(self, web_base_url: str):
        """Sets the web_base_url of this FederationServer.


        :param web_base_url: The web_base_url of this FederationServer.
        :type web_base_url: str
        """

        self._web_base_url = web_base_url

    @property
    def https_port(self) -> int:
        """Gets the https_port of this FederationServer.


        :return: The https_port of this FederationServer.
        :rtype: int
        """
        return self._https_port

    @https_port.setter
    def https_port(self, https_port: int):
        """Sets the https_port of this FederationServer.


        :param https_port: The https_port of this FederationServer.
        :type https_port: int
        """

        self._https_port = https_port

    @property
    def health_check_interval_seconds(self) -> int:
        """Gets the health_check_interval_seconds of this FederationServer.


        :return: The health_check_interval_seconds of this FederationServer.
        :rtype: int
        """
        return self._health_check_interval_seconds

    @health_check_interval_seconds.setter
    def health_check_interval_seconds(self, health_check_interval_seconds: int):
        """Sets the health_check_interval_seconds of this FederationServer.


        :param health_check_interval_seconds: The health_check_interval_seconds of this FederationServer.
        :type health_check_interval_seconds: int
        """

        self._health_check_interval_seconds = health_check_interval_seconds

    @property
    def initialization_delay_seconds(self) -> int:
        """Gets the initialization_delay_seconds of this FederationServer.


        :return: The initialization_delay_seconds of this FederationServer.
        :rtype: int
        """
        return self._initialization_delay_seconds

    @initialization_delay_seconds.setter
    def initialization_delay_seconds(self, initialization_delay_seconds: int):
        """Sets the initialization_delay_seconds of this FederationServer.


        :param initialization_delay_seconds: The initialization_delay_seconds of this FederationServer.
        :type initialization_delay_seconds: int
        """

        self._initialization_delay_seconds = initialization_delay_seconds

    @property
    def max_message_size_bytes(self) -> int:
        """Gets the max_message_size_bytes of this FederationServer.


        :return: The max_message_size_bytes of this FederationServer.
        :rtype: int
        """
        return self._max_message_size_bytes

    @max_message_size_bytes.setter
    def max_message_size_bytes(self, max_message_size_bytes: int):
        """Sets the max_message_size_bytes of this FederationServer.


        :param max_message_size_bytes: The max_message_size_bytes of this FederationServer.
        :type max_message_size_bytes: int
        """

        self._max_message_size_bytes = max_message_size_bytes
