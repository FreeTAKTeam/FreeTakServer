# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.resource import Resource  # noqa: F401,E501
from swagger_server import util


class MissionAddResource(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, data: Resource=None, timestamp: datetime=None, creator_uid: str=None, keywords: List[str]=None):  # noqa: E501
        """MissionAddResource - a model defined in Swagger

        :param data: The data of this MissionAddResource.  # noqa: E501
        :type data: Resource
        :param timestamp: The timestamp of this MissionAddResource.  # noqa: E501
        :type timestamp: datetime
        :param creator_uid: The creator_uid of this MissionAddResource.  # noqa: E501
        :type creator_uid: str
        :param keywords: The keywords of this MissionAddResource.  # noqa: E501
        :type keywords: List[str]
        """
        self.swagger_types = {
            'data': Resource,
            'timestamp': datetime,
            'creator_uid': str,
            'keywords': List[str]
        }

        self.attribute_map = {
            'data': 'data',
            'timestamp': 'timestamp',
            'creator_uid': 'creatorUid',
            'keywords': 'keywords'
        }
        self._data = data
        self._timestamp = timestamp
        self._creator_uid = creator_uid
        self._keywords = keywords

    @classmethod
    def from_dict(cls, dikt) -> 'MissionAddResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MissionAddResource of this MissionAddResource.  # noqa: E501
        :rtype: MissionAddResource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self) -> Resource:
        """Gets the data of this MissionAddResource.


        :return: The data of this MissionAddResource.
        :rtype: Resource
        """
        return self._data

    @data.setter
    def data(self, data: Resource):
        """Sets the data of this MissionAddResource.


        :param data: The data of this MissionAddResource.
        :type data: Resource
        """

        self._data = data

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this MissionAddResource.


        :return: The timestamp of this MissionAddResource.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this MissionAddResource.


        :param timestamp: The timestamp of this MissionAddResource.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def creator_uid(self) -> str:
        """Gets the creator_uid of this MissionAddResource.


        :return: The creator_uid of this MissionAddResource.
        :rtype: str
        """
        return self._creator_uid

    @creator_uid.setter
    def creator_uid(self, creator_uid: str):
        """Sets the creator_uid of this MissionAddResource.


        :param creator_uid: The creator_uid of this MissionAddResource.
        :type creator_uid: str
        """

        self._creator_uid = creator_uid

    @property
    def keywords(self) -> List[str]:
        """Gets the keywords of this MissionAddResource.


        :return: The keywords of this MissionAddResource.
        :rtype: List[str]
        """
        return self._keywords

    @keywords.setter
    def keywords(self, keywords: List[str]):
        """Sets the keywords of this MissionAddResource.


        :param keywords: The keywords of this MissionAddResource.
        :type keywords: List[str]
        """

        self._keywords = keywords
