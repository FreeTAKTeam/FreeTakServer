# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ExternalMissionData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, tool: str=None, url_data: str=None, notes: str=None, uid: str=None, url_view: str=None):  # noqa: E501
        """ExternalMissionData - a model defined in Swagger

        :param name: The name of this ExternalMissionData.  # noqa: E501
        :type name: str
        :param tool: The tool of this ExternalMissionData.  # noqa: E501
        :type tool: str
        :param url_data: The url_data of this ExternalMissionData.  # noqa: E501
        :type url_data: str
        :param notes: The notes of this ExternalMissionData.  # noqa: E501
        :type notes: str
        :param uid: The uid of this ExternalMissionData.  # noqa: E501
        :type uid: str
        :param url_view: The url_view of this ExternalMissionData.  # noqa: E501
        :type url_view: str
        """
        self.swagger_types = {
            'name': str,
            'tool': str,
            'url_data': str,
            'notes': str,
            'uid': str,
            'url_view': str
        }

        self.attribute_map = {
            'name': 'name',
            'tool': 'tool',
            'url_data': 'urlData',
            'notes': 'notes',
            'uid': 'uid',
            'url_view': 'urlView'
        }
        self._name = name
        self._tool = tool
        self._url_data = url_data
        self._notes = notes
        self._uid = uid
        self._url_view = url_view

    @classmethod
    def from_dict(cls, dikt) -> 'ExternalMissionData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExternalMissionData of this ExternalMissionData.  # noqa: E501
        :rtype: ExternalMissionData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this ExternalMissionData.


        :return: The name of this ExternalMissionData.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this ExternalMissionData.


        :param name: The name of this ExternalMissionData.
        :type name: str
        """

        self._name = name

    @property
    def tool(self) -> str:
        """Gets the tool of this ExternalMissionData.


        :return: The tool of this ExternalMissionData.
        :rtype: str
        """
        return self._tool

    @tool.setter
    def tool(self, tool: str):
        """Sets the tool of this ExternalMissionData.


        :param tool: The tool of this ExternalMissionData.
        :type tool: str
        """

        self._tool = tool

    @property
    def url_data(self) -> str:
        """Gets the url_data of this ExternalMissionData.


        :return: The url_data of this ExternalMissionData.
        :rtype: str
        """
        return self._url_data

    @url_data.setter
    def url_data(self, url_data: str):
        """Sets the url_data of this ExternalMissionData.


        :param url_data: The url_data of this ExternalMissionData.
        :type url_data: str
        """

        self._url_data = url_data

    @property
    def notes(self) -> str:
        """Gets the notes of this ExternalMissionData.


        :return: The notes of this ExternalMissionData.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes: str):
        """Sets the notes of this ExternalMissionData.


        :param notes: The notes of this ExternalMissionData.
        :type notes: str
        """

        self._notes = notes

    @property
    def uid(self) -> str:
        """Gets the uid of this ExternalMissionData.


        :return: The uid of this ExternalMissionData.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid: str):
        """Sets the uid of this ExternalMissionData.


        :param uid: The uid of this ExternalMissionData.
        :type uid: str
        """

        self._uid = uid

    @property
    def url_view(self) -> str:
        """Gets the url_view of this ExternalMissionData.


        :return: The url_view of this ExternalMissionData.
        :rtype: str
        """
        return self._url_view

    @url_view.setter
    def url_view(self, url_view: str):
        """Sets the url_view of this ExternalMissionData.


        :param url_view: The url_view of this ExternalMissionData.
        :type url_view: str
        """

        self._url_view = url_view
