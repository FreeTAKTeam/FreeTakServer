# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DosLimitRule(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, client_threshold_count: int=None, message_limit_per_interval: int=None):  # noqa: E501
        """DosLimitRule - a model defined in Swagger

        :param client_threshold_count: The client_threshold_count of this DosLimitRule.  # noqa: E501
        :type client_threshold_count: int
        :param message_limit_per_interval: The message_limit_per_interval of this DosLimitRule.  # noqa: E501
        :type message_limit_per_interval: int
        """
        self.swagger_types = {
            'client_threshold_count': int,
            'message_limit_per_interval': int
        }

        self.attribute_map = {
            'client_threshold_count': 'clientThresholdCount',
            'message_limit_per_interval': 'messageLimitPerInterval'
        }
        self._client_threshold_count = client_threshold_count
        self._message_limit_per_interval = message_limit_per_interval

    @classmethod
    def from_dict(cls, dikt) -> 'DosLimitRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DosLimitRule of this DosLimitRule.  # noqa: E501
        :rtype: DosLimitRule
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_threshold_count(self) -> int:
        """Gets the client_threshold_count of this DosLimitRule.


        :return: The client_threshold_count of this DosLimitRule.
        :rtype: int
        """
        return self._client_threshold_count

    @client_threshold_count.setter
    def client_threshold_count(self, client_threshold_count: int):
        """Sets the client_threshold_count of this DosLimitRule.


        :param client_threshold_count: The client_threshold_count of this DosLimitRule.
        :type client_threshold_count: int
        """

        self._client_threshold_count = client_threshold_count

    @property
    def message_limit_per_interval(self) -> int:
        """Gets the message_limit_per_interval of this DosLimitRule.


        :return: The message_limit_per_interval of this DosLimitRule.
        :rtype: int
        """
        return self._message_limit_per_interval

    @message_limit_per_interval.setter
    def message_limit_per_interval(self, message_limit_per_interval: int):
        """Sets the message_limit_per_interval of this DosLimitRule.


        :param message_limit_per_interval: The message_limit_per_interval of this DosLimitRule.
        :type message_limit_per_interval: int
        """

        self._message_limit_per_interval = message_limit_per_interval
