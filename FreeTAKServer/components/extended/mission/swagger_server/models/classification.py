# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.caveat import Caveat  # noqa: F401,E501
from swagger_server import util


class Classification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, level: str=None, caveats: List[Caveat]=None):  # noqa: E501
        """Classification - a model defined in Swagger

        :param level: The level of this Classification.  # noqa: E501
        :type level: str
        :param caveats: The caveats of this Classification.  # noqa: E501
        :type caveats: List[Caveat]
        """
        self.swagger_types = {
            'level': str,
            'caveats': List[Caveat]
        }

        self.attribute_map = {
            'level': 'level',
            'caveats': 'caveats'
        }
        self._level = level
        self._caveats = caveats

    @classmethod
    def from_dict(cls, dikt) -> 'Classification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Classification of this Classification.  # noqa: E501
        :rtype: Classification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def level(self) -> str:
        """Gets the level of this Classification.


        :return: The level of this Classification.
        :rtype: str
        """
        return self._level

    @level.setter
    def level(self, level: str):
        """Sets the level of this Classification.


        :param level: The level of this Classification.
        :type level: str
        """

        self._level = level

    @property
    def caveats(self) -> List[Caveat]:
        """Gets the caveats of this Classification.


        :return: The caveats of this Classification.
        :rtype: List[Caveat]
        """
        return self._caveats

    @caveats.setter
    def caveats(self, caveats: List[Caveat]):
        """Sets the caveats of this Classification.


        :param caveats: The caveats of this Classification.
        :type caveats: List[Caveat]
        """

        self._caveats = caveats
