# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PluginInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, description: str=None, class_name: str=None, version: str=None, tag: str=None, id: str=None, exception_message: str=None, archive_enabled: bool=None, enabled: bool=None, started: bool=None, interceptor: bool=None, receiver: bool=None, sender: bool=None):  # noqa: E501
        """PluginInfo - a model defined in Swagger

        :param name: The name of this PluginInfo.  # noqa: E501
        :type name: str
        :param description: The description of this PluginInfo.  # noqa: E501
        :type description: str
        :param class_name: The class_name of this PluginInfo.  # noqa: E501
        :type class_name: str
        :param version: The version of this PluginInfo.  # noqa: E501
        :type version: str
        :param tag: The tag of this PluginInfo.  # noqa: E501
        :type tag: str
        :param id: The id of this PluginInfo.  # noqa: E501
        :type id: str
        :param exception_message: The exception_message of this PluginInfo.  # noqa: E501
        :type exception_message: str
        :param archive_enabled: The archive_enabled of this PluginInfo.  # noqa: E501
        :type archive_enabled: bool
        :param enabled: The enabled of this PluginInfo.  # noqa: E501
        :type enabled: bool
        :param started: The started of this PluginInfo.  # noqa: E501
        :type started: bool
        :param interceptor: The interceptor of this PluginInfo.  # noqa: E501
        :type interceptor: bool
        :param receiver: The receiver of this PluginInfo.  # noqa: E501
        :type receiver: bool
        :param sender: The sender of this PluginInfo.  # noqa: E501
        :type sender: bool
        """
        self.swagger_types = {
            'name': str,
            'description': str,
            'class_name': str,
            'version': str,
            'tag': str,
            'id': str,
            'exception_message': str,
            'archive_enabled': bool,
            'enabled': bool,
            'started': bool,
            'interceptor': bool,
            'receiver': bool,
            'sender': bool
        }

        self.attribute_map = {
            'name': 'name',
            'description': 'description',
            'class_name': 'className',
            'version': 'version',
            'tag': 'tag',
            'id': 'id',
            'exception_message': 'exceptionMessage',
            'archive_enabled': 'archiveEnabled',
            'enabled': 'enabled',
            'started': 'started',
            'interceptor': 'interceptor',
            'receiver': 'receiver',
            'sender': 'sender'
        }
        self._name = name
        self._description = description
        self._class_name = class_name
        self._version = version
        self._tag = tag
        self._id = id
        self._exception_message = exception_message
        self._archive_enabled = archive_enabled
        self._enabled = enabled
        self._started = started
        self._interceptor = interceptor
        self._receiver = receiver
        self._sender = sender

    @classmethod
    def from_dict(cls, dikt) -> 'PluginInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PluginInfo of this PluginInfo.  # noqa: E501
        :rtype: PluginInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this PluginInfo.


        :return: The name of this PluginInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this PluginInfo.


        :param name: The name of this PluginInfo.
        :type name: str
        """

        self._name = name

    @property
    def description(self) -> str:
        """Gets the description of this PluginInfo.


        :return: The description of this PluginInfo.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this PluginInfo.


        :param description: The description of this PluginInfo.
        :type description: str
        """

        self._description = description

    @property
    def class_name(self) -> str:
        """Gets the class_name of this PluginInfo.


        :return: The class_name of this PluginInfo.
        :rtype: str
        """
        return self._class_name

    @class_name.setter
    def class_name(self, class_name: str):
        """Sets the class_name of this PluginInfo.


        :param class_name: The class_name of this PluginInfo.
        :type class_name: str
        """

        self._class_name = class_name

    @property
    def version(self) -> str:
        """Gets the version of this PluginInfo.


        :return: The version of this PluginInfo.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this PluginInfo.


        :param version: The version of this PluginInfo.
        :type version: str
        """

        self._version = version

    @property
    def tag(self) -> str:
        """Gets the tag of this PluginInfo.


        :return: The tag of this PluginInfo.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag: str):
        """Sets the tag of this PluginInfo.


        :param tag: The tag of this PluginInfo.
        :type tag: str
        """

        self._tag = tag

    @property
    def id(self) -> str:
        """Gets the id of this PluginInfo.


        :return: The id of this PluginInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this PluginInfo.


        :param id: The id of this PluginInfo.
        :type id: str
        """

        self._id = id

    @property
    def exception_message(self) -> str:
        """Gets the exception_message of this PluginInfo.


        :return: The exception_message of this PluginInfo.
        :rtype: str
        """
        return self._exception_message

    @exception_message.setter
    def exception_message(self, exception_message: str):
        """Sets the exception_message of this PluginInfo.


        :param exception_message: The exception_message of this PluginInfo.
        :type exception_message: str
        """

        self._exception_message = exception_message

    @property
    def archive_enabled(self) -> bool:
        """Gets the archive_enabled of this PluginInfo.


        :return: The archive_enabled of this PluginInfo.
        :rtype: bool
        """
        return self._archive_enabled

    @archive_enabled.setter
    def archive_enabled(self, archive_enabled: bool):
        """Sets the archive_enabled of this PluginInfo.


        :param archive_enabled: The archive_enabled of this PluginInfo.
        :type archive_enabled: bool
        """

        self._archive_enabled = archive_enabled

    @property
    def enabled(self) -> bool:
        """Gets the enabled of this PluginInfo.


        :return: The enabled of this PluginInfo.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled: bool):
        """Sets the enabled of this PluginInfo.


        :param enabled: The enabled of this PluginInfo.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def started(self) -> bool:
        """Gets the started of this PluginInfo.


        :return: The started of this PluginInfo.
        :rtype: bool
        """
        return self._started

    @started.setter
    def started(self, started: bool):
        """Sets the started of this PluginInfo.


        :param started: The started of this PluginInfo.
        :type started: bool
        """

        self._started = started

    @property
    def interceptor(self) -> bool:
        """Gets the interceptor of this PluginInfo.


        :return: The interceptor of this PluginInfo.
        :rtype: bool
        """
        return self._interceptor

    @interceptor.setter
    def interceptor(self, interceptor: bool):
        """Sets the interceptor of this PluginInfo.


        :param interceptor: The interceptor of this PluginInfo.
        :type interceptor: bool
        """

        self._interceptor = interceptor

    @property
    def receiver(self) -> bool:
        """Gets the receiver of this PluginInfo.


        :return: The receiver of this PluginInfo.
        :rtype: bool
        """
        return self._receiver

    @receiver.setter
    def receiver(self, receiver: bool):
        """Sets the receiver of this PluginInfo.


        :param receiver: The receiver of this PluginInfo.
        :type receiver: bool
        """

        self._receiver = receiver

    @property
    def sender(self) -> bool:
        """Gets the sender of this PluginInfo.


        :return: The sender of this PluginInfo.
        :rtype: bool
        """
        return self._sender

    @sender.setter
    def sender(self, sender: bool):
        """Sets the sender of this PluginInfo.


        :param sender: The sender of this PluginInfo.
        :type sender: bool
        """

        self._sender = sender
