# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SecurityConfigInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, keystore_file: str=None, truststore_file: str=None, keystore_pass: str=None, truststore_pass: str=None, tls_version: str=None, x509_groups: bool=None, x509add_anon: bool=None, enable_enrollment: bool=None, ca_type: str=None, signing_keystore_file: str=None, signing_keystore_pass: str=None, validity_days: int=None, msca_user_name: str=None, msca_password: str=None, msca_truststore: str=None, msca_truststore_pass: str=None, msca_template_name: str=None):  # noqa: E501
        """SecurityConfigInfo - a model defined in Swagger

        :param keystore_file: The keystore_file of this SecurityConfigInfo.  # noqa: E501
        :type keystore_file: str
        :param truststore_file: The truststore_file of this SecurityConfigInfo.  # noqa: E501
        :type truststore_file: str
        :param keystore_pass: The keystore_pass of this SecurityConfigInfo.  # noqa: E501
        :type keystore_pass: str
        :param truststore_pass: The truststore_pass of this SecurityConfigInfo.  # noqa: E501
        :type truststore_pass: str
        :param tls_version: The tls_version of this SecurityConfigInfo.  # noqa: E501
        :type tls_version: str
        :param x509_groups: The x509_groups of this SecurityConfigInfo.  # noqa: E501
        :type x509_groups: bool
        :param x509add_anon: The x509add_anon of this SecurityConfigInfo.  # noqa: E501
        :type x509add_anon: bool
        :param enable_enrollment: The enable_enrollment of this SecurityConfigInfo.  # noqa: E501
        :type enable_enrollment: bool
        :param ca_type: The ca_type of this SecurityConfigInfo.  # noqa: E501
        :type ca_type: str
        :param signing_keystore_file: The signing_keystore_file of this SecurityConfigInfo.  # noqa: E501
        :type signing_keystore_file: str
        :param signing_keystore_pass: The signing_keystore_pass of this SecurityConfigInfo.  # noqa: E501
        :type signing_keystore_pass: str
        :param validity_days: The validity_days of this SecurityConfigInfo.  # noqa: E501
        :type validity_days: int
        :param msca_user_name: The msca_user_name of this SecurityConfigInfo.  # noqa: E501
        :type msca_user_name: str
        :param msca_password: The msca_password of this SecurityConfigInfo.  # noqa: E501
        :type msca_password: str
        :param msca_truststore: The msca_truststore of this SecurityConfigInfo.  # noqa: E501
        :type msca_truststore: str
        :param msca_truststore_pass: The msca_truststore_pass of this SecurityConfigInfo.  # noqa: E501
        :type msca_truststore_pass: str
        :param msca_template_name: The msca_template_name of this SecurityConfigInfo.  # noqa: E501
        :type msca_template_name: str
        """
        self.swagger_types = {
            'keystore_file': str,
            'truststore_file': str,
            'keystore_pass': str,
            'truststore_pass': str,
            'tls_version': str,
            'x509_groups': bool,
            'x509add_anon': bool,
            'enable_enrollment': bool,
            'ca_type': str,
            'signing_keystore_file': str,
            'signing_keystore_pass': str,
            'validity_days': int,
            'msca_user_name': str,
            'msca_password': str,
            'msca_truststore': str,
            'msca_truststore_pass': str,
            'msca_template_name': str
        }

        self.attribute_map = {
            'keystore_file': 'keystoreFile',
            'truststore_file': 'truststoreFile',
            'keystore_pass': 'keystorePass',
            'truststore_pass': 'truststorePass',
            'tls_version': 'tlsVersion',
            'x509_groups': 'x509Groups',
            'x509add_anon': 'x509addAnon',
            'enable_enrollment': 'enableEnrollment',
            'ca_type': 'caType',
            'signing_keystore_file': 'signingKeystoreFile',
            'signing_keystore_pass': 'signingKeystorePass',
            'validity_days': 'validityDays',
            'msca_user_name': 'mscaUserName',
            'msca_password': 'mscaPassword',
            'msca_truststore': 'mscaTruststore',
            'msca_truststore_pass': 'mscaTruststorePass',
            'msca_template_name': 'mscaTemplateName'
        }
        self._keystore_file = keystore_file
        self._truststore_file = truststore_file
        self._keystore_pass = keystore_pass
        self._truststore_pass = truststore_pass
        self._tls_version = tls_version
        self._x509_groups = x509_groups
        self._x509add_anon = x509add_anon
        self._enable_enrollment = enable_enrollment
        self._ca_type = ca_type
        self._signing_keystore_file = signing_keystore_file
        self._signing_keystore_pass = signing_keystore_pass
        self._validity_days = validity_days
        self._msca_user_name = msca_user_name
        self._msca_password = msca_password
        self._msca_truststore = msca_truststore
        self._msca_truststore_pass = msca_truststore_pass
        self._msca_template_name = msca_template_name

    @classmethod
    def from_dict(cls, dikt) -> 'SecurityConfigInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SecurityConfigInfo of this SecurityConfigInfo.  # noqa: E501
        :rtype: SecurityConfigInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keystore_file(self) -> str:
        """Gets the keystore_file of this SecurityConfigInfo.


        :return: The keystore_file of this SecurityConfigInfo.
        :rtype: str
        """
        return self._keystore_file

    @keystore_file.setter
    def keystore_file(self, keystore_file: str):
        """Sets the keystore_file of this SecurityConfigInfo.


        :param keystore_file: The keystore_file of this SecurityConfigInfo.
        :type keystore_file: str
        """

        self._keystore_file = keystore_file

    @property
    def truststore_file(self) -> str:
        """Gets the truststore_file of this SecurityConfigInfo.


        :return: The truststore_file of this SecurityConfigInfo.
        :rtype: str
        """
        return self._truststore_file

    @truststore_file.setter
    def truststore_file(self, truststore_file: str):
        """Sets the truststore_file of this SecurityConfigInfo.


        :param truststore_file: The truststore_file of this SecurityConfigInfo.
        :type truststore_file: str
        """

        self._truststore_file = truststore_file

    @property
    def keystore_pass(self) -> str:
        """Gets the keystore_pass of this SecurityConfigInfo.


        :return: The keystore_pass of this SecurityConfigInfo.
        :rtype: str
        """
        return self._keystore_pass

    @keystore_pass.setter
    def keystore_pass(self, keystore_pass: str):
        """Sets the keystore_pass of this SecurityConfigInfo.


        :param keystore_pass: The keystore_pass of this SecurityConfigInfo.
        :type keystore_pass: str
        """

        self._keystore_pass = keystore_pass

    @property
    def truststore_pass(self) -> str:
        """Gets the truststore_pass of this SecurityConfigInfo.


        :return: The truststore_pass of this SecurityConfigInfo.
        :rtype: str
        """
        return self._truststore_pass

    @truststore_pass.setter
    def truststore_pass(self, truststore_pass: str):
        """Sets the truststore_pass of this SecurityConfigInfo.


        :param truststore_pass: The truststore_pass of this SecurityConfigInfo.
        :type truststore_pass: str
        """

        self._truststore_pass = truststore_pass

    @property
    def tls_version(self) -> str:
        """Gets the tls_version of this SecurityConfigInfo.


        :return: The tls_version of this SecurityConfigInfo.
        :rtype: str
        """
        return self._tls_version

    @tls_version.setter
    def tls_version(self, tls_version: str):
        """Sets the tls_version of this SecurityConfigInfo.


        :param tls_version: The tls_version of this SecurityConfigInfo.
        :type tls_version: str
        """

        self._tls_version = tls_version

    @property
    def x509_groups(self) -> bool:
        """Gets the x509_groups of this SecurityConfigInfo.


        :return: The x509_groups of this SecurityConfigInfo.
        :rtype: bool
        """
        return self._x509_groups

    @x509_groups.setter
    def x509_groups(self, x509_groups: bool):
        """Sets the x509_groups of this SecurityConfigInfo.


        :param x509_groups: The x509_groups of this SecurityConfigInfo.
        :type x509_groups: bool
        """

        self._x509_groups = x509_groups

    @property
    def x509add_anon(self) -> bool:
        """Gets the x509add_anon of this SecurityConfigInfo.


        :return: The x509add_anon of this SecurityConfigInfo.
        :rtype: bool
        """
        return self._x509add_anon

    @x509add_anon.setter
    def x509add_anon(self, x509add_anon: bool):
        """Sets the x509add_anon of this SecurityConfigInfo.


        :param x509add_anon: The x509add_anon of this SecurityConfigInfo.
        :type x509add_anon: bool
        """

        self._x509add_anon = x509add_anon

    @property
    def enable_enrollment(self) -> bool:
        """Gets the enable_enrollment of this SecurityConfigInfo.


        :return: The enable_enrollment of this SecurityConfigInfo.
        :rtype: bool
        """
        return self._enable_enrollment

    @enable_enrollment.setter
    def enable_enrollment(self, enable_enrollment: bool):
        """Sets the enable_enrollment of this SecurityConfigInfo.


        :param enable_enrollment: The enable_enrollment of this SecurityConfigInfo.
        :type enable_enrollment: bool
        """

        self._enable_enrollment = enable_enrollment

    @property
    def ca_type(self) -> str:
        """Gets the ca_type of this SecurityConfigInfo.


        :return: The ca_type of this SecurityConfigInfo.
        :rtype: str
        """
        return self._ca_type

    @ca_type.setter
    def ca_type(self, ca_type: str):
        """Sets the ca_type of this SecurityConfigInfo.


        :param ca_type: The ca_type of this SecurityConfigInfo.
        :type ca_type: str
        """

        self._ca_type = ca_type

    @property
    def signing_keystore_file(self) -> str:
        """Gets the signing_keystore_file of this SecurityConfigInfo.


        :return: The signing_keystore_file of this SecurityConfigInfo.
        :rtype: str
        """
        return self._signing_keystore_file

    @signing_keystore_file.setter
    def signing_keystore_file(self, signing_keystore_file: str):
        """Sets the signing_keystore_file of this SecurityConfigInfo.


        :param signing_keystore_file: The signing_keystore_file of this SecurityConfigInfo.
        :type signing_keystore_file: str
        """

        self._signing_keystore_file = signing_keystore_file

    @property
    def signing_keystore_pass(self) -> str:
        """Gets the signing_keystore_pass of this SecurityConfigInfo.


        :return: The signing_keystore_pass of this SecurityConfigInfo.
        :rtype: str
        """
        return self._signing_keystore_pass

    @signing_keystore_pass.setter
    def signing_keystore_pass(self, signing_keystore_pass: str):
        """Sets the signing_keystore_pass of this SecurityConfigInfo.


        :param signing_keystore_pass: The signing_keystore_pass of this SecurityConfigInfo.
        :type signing_keystore_pass: str
        """

        self._signing_keystore_pass = signing_keystore_pass

    @property
    def validity_days(self) -> int:
        """Gets the validity_days of this SecurityConfigInfo.


        :return: The validity_days of this SecurityConfigInfo.
        :rtype: int
        """
        return self._validity_days

    @validity_days.setter
    def validity_days(self, validity_days: int):
        """Sets the validity_days of this SecurityConfigInfo.


        :param validity_days: The validity_days of this SecurityConfigInfo.
        :type validity_days: int
        """

        self._validity_days = validity_days

    @property
    def msca_user_name(self) -> str:
        """Gets the msca_user_name of this SecurityConfigInfo.


        :return: The msca_user_name of this SecurityConfigInfo.
        :rtype: str
        """
        return self._msca_user_name

    @msca_user_name.setter
    def msca_user_name(self, msca_user_name: str):
        """Sets the msca_user_name of this SecurityConfigInfo.


        :param msca_user_name: The msca_user_name of this SecurityConfigInfo.
        :type msca_user_name: str
        """

        self._msca_user_name = msca_user_name

    @property
    def msca_password(self) -> str:
        """Gets the msca_password of this SecurityConfigInfo.


        :return: The msca_password of this SecurityConfigInfo.
        :rtype: str
        """
        return self._msca_password

    @msca_password.setter
    def msca_password(self, msca_password: str):
        """Sets the msca_password of this SecurityConfigInfo.


        :param msca_password: The msca_password of this SecurityConfigInfo.
        :type msca_password: str
        """

        self._msca_password = msca_password

    @property
    def msca_truststore(self) -> str:
        """Gets the msca_truststore of this SecurityConfigInfo.


        :return: The msca_truststore of this SecurityConfigInfo.
        :rtype: str
        """
        return self._msca_truststore

    @msca_truststore.setter
    def msca_truststore(self, msca_truststore: str):
        """Sets the msca_truststore of this SecurityConfigInfo.


        :param msca_truststore: The msca_truststore of this SecurityConfigInfo.
        :type msca_truststore: str
        """

        self._msca_truststore = msca_truststore

    @property
    def msca_truststore_pass(self) -> str:
        """Gets the msca_truststore_pass of this SecurityConfigInfo.


        :return: The msca_truststore_pass of this SecurityConfigInfo.
        :rtype: str
        """
        return self._msca_truststore_pass

    @msca_truststore_pass.setter
    def msca_truststore_pass(self, msca_truststore_pass: str):
        """Sets the msca_truststore_pass of this SecurityConfigInfo.


        :param msca_truststore_pass: The msca_truststore_pass of this SecurityConfigInfo.
        :type msca_truststore_pass: str
        """

        self._msca_truststore_pass = msca_truststore_pass

    @property
    def msca_template_name(self) -> str:
        """Gets the msca_template_name of this SecurityConfigInfo.


        :return: The msca_template_name of this SecurityConfigInfo.
        :rtype: str
        """
        return self._msca_template_name

    @msca_template_name.setter
    def msca_template_name(self, msca_template_name: str):
        """Sets the msca_template_name of this SecurityConfigInfo.


        :param msca_template_name: The msca_template_name of this SecurityConfigInfo.
        :type msca_template_name: str
        """

        self._msca_template_name = msca_template_name
