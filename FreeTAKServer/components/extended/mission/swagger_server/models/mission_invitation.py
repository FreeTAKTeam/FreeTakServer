# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.mission_role import MissionRole  # noqa: F401,E501
from swagger_server import util


class MissionInvitation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, mission_name: str=None, invitee: str=None, type: str=None, creator_uid: str=None, create_time: datetime=None, token: str=None, role: MissionRole=None):  # noqa: E501
        """MissionInvitation - a model defined in Swagger

        :param mission_name: The mission_name of this MissionInvitation.  # noqa: E501
        :type mission_name: str
        :param invitee: The invitee of this MissionInvitation.  # noqa: E501
        :type invitee: str
        :param type: The type of this MissionInvitation.  # noqa: E501
        :type type: str
        :param creator_uid: The creator_uid of this MissionInvitation.  # noqa: E501
        :type creator_uid: str
        :param create_time: The create_time of this MissionInvitation.  # noqa: E501
        :type create_time: datetime
        :param token: The token of this MissionInvitation.  # noqa: E501
        :type token: str
        :param role: The role of this MissionInvitation.  # noqa: E501
        :type role: MissionRole
        """
        self.swagger_types = {
            'mission_name': str,
            'invitee': str,
            'type': str,
            'creator_uid': str,
            'create_time': datetime,
            'token': str,
            'role': MissionRole
        }

        self.attribute_map = {
            'mission_name': 'missionName',
            'invitee': 'invitee',
            'type': 'type',
            'creator_uid': 'creatorUid',
            'create_time': 'createTime',
            'token': 'token',
            'role': 'role'
        }
        self._mission_name = mission_name
        self._invitee = invitee
        self._type = type
        self._creator_uid = creator_uid
        self._create_time = create_time
        self._token = token
        self._role = role

    @classmethod
    def from_dict(cls, dikt) -> 'MissionInvitation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MissionInvitation of this MissionInvitation.  # noqa: E501
        :rtype: MissionInvitation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mission_name(self) -> str:
        """Gets the mission_name of this MissionInvitation.


        :return: The mission_name of this MissionInvitation.
        :rtype: str
        """
        return self._mission_name

    @mission_name.setter
    def mission_name(self, mission_name: str):
        """Sets the mission_name of this MissionInvitation.


        :param mission_name: The mission_name of this MissionInvitation.
        :type mission_name: str
        """

        self._mission_name = mission_name

    @property
    def invitee(self) -> str:
        """Gets the invitee of this MissionInvitation.


        :return: The invitee of this MissionInvitation.
        :rtype: str
        """
        return self._invitee

    @invitee.setter
    def invitee(self, invitee: str):
        """Sets the invitee of this MissionInvitation.


        :param invitee: The invitee of this MissionInvitation.
        :type invitee: str
        """

        self._invitee = invitee

    @property
    def type(self) -> str:
        """Gets the type of this MissionInvitation.


        :return: The type of this MissionInvitation.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this MissionInvitation.


        :param type: The type of this MissionInvitation.
        :type type: str
        """

        self._type = type

    @property
    def creator_uid(self) -> str:
        """Gets the creator_uid of this MissionInvitation.


        :return: The creator_uid of this MissionInvitation.
        :rtype: str
        """
        return self._creator_uid

    @creator_uid.setter
    def creator_uid(self, creator_uid: str):
        """Sets the creator_uid of this MissionInvitation.


        :param creator_uid: The creator_uid of this MissionInvitation.
        :type creator_uid: str
        """

        self._creator_uid = creator_uid

    @property
    def create_time(self) -> datetime:
        """Gets the create_time of this MissionInvitation.


        :return: The create_time of this MissionInvitation.
        :rtype: datetime
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time: datetime):
        """Sets the create_time of this MissionInvitation.


        :param create_time: The create_time of this MissionInvitation.
        :type create_time: datetime
        """

        self._create_time = create_time

    @property
    def token(self) -> str:
        """Gets the token of this MissionInvitation.


        :return: The token of this MissionInvitation.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token: str):
        """Sets the token of this MissionInvitation.


        :param token: The token of this MissionInvitation.
        :type token: str
        """

        self._token = token

    @property
    def role(self) -> MissionRole:
        """Gets the role of this MissionInvitation.


        :return: The role of this MissionInvitation.
        :rtype: MissionRole
        """
        return self._role

    @role.setter
    def role(self, role: MissionRole):
        """Sets the role of this MissionInvitation.


        :param role: The role of this MissionInvitation.
        :type role: MissionRole
        """

        self._role = role
