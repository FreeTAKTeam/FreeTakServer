# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SimpleUserGroupModel(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, username: str=None, group_list: List[str]=None, group_list_in: List[str]=None, group_list_out: List[str]=None):  # noqa: E501
        """SimpleUserGroupModel - a model defined in Swagger

        :param username: The username of this SimpleUserGroupModel.  # noqa: E501
        :type username: str
        :param group_list: The group_list of this SimpleUserGroupModel.  # noqa: E501
        :type group_list: List[str]
        :param group_list_in: The group_list_in of this SimpleUserGroupModel.  # noqa: E501
        :type group_list_in: List[str]
        :param group_list_out: The group_list_out of this SimpleUserGroupModel.  # noqa: E501
        :type group_list_out: List[str]
        """
        self.swagger_types = {
            'username': str,
            'group_list': List[str],
            'group_list_in': List[str],
            'group_list_out': List[str]
        }

        self.attribute_map = {
            'username': 'username',
            'group_list': 'groupList',
            'group_list_in': 'groupListIN',
            'group_list_out': 'groupListOUT'
        }
        self._username = username
        self._group_list = group_list
        self._group_list_in = group_list_in
        self._group_list_out = group_list_out

    @classmethod
    def from_dict(cls, dikt) -> 'SimpleUserGroupModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SimpleUserGroupModel of this SimpleUserGroupModel.  # noqa: E501
        :rtype: SimpleUserGroupModel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self) -> str:
        """Gets the username of this SimpleUserGroupModel.


        :return: The username of this SimpleUserGroupModel.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this SimpleUserGroupModel.


        :param username: The username of this SimpleUserGroupModel.
        :type username: str
        """

        self._username = username

    @property
    def group_list(self) -> List[str]:
        """Gets the group_list of this SimpleUserGroupModel.


        :return: The group_list of this SimpleUserGroupModel.
        :rtype: List[str]
        """
        return self._group_list

    @group_list.setter
    def group_list(self, group_list: List[str]):
        """Sets the group_list of this SimpleUserGroupModel.


        :param group_list: The group_list of this SimpleUserGroupModel.
        :type group_list: List[str]
        """

        self._group_list = group_list

    @property
    def group_list_in(self) -> List[str]:
        """Gets the group_list_in of this SimpleUserGroupModel.


        :return: The group_list_in of this SimpleUserGroupModel.
        :rtype: List[str]
        """
        return self._group_list_in

    @group_list_in.setter
    def group_list_in(self, group_list_in: List[str]):
        """Sets the group_list_in of this SimpleUserGroupModel.


        :param group_list_in: The group_list_in of this SimpleUserGroupModel.
        :type group_list_in: List[str]
        """

        self._group_list_in = group_list_in

    @property
    def group_list_out(self) -> List[str]:
        """Gets the group_list_out of this SimpleUserGroupModel.


        :return: The group_list_out of this SimpleUserGroupModel.
        :rtype: List[str]
        """
        return self._group_list_out

    @group_list_out.setter
    def group_list_out(self, group_list_out: List[str]):
        """Sets the group_list_out of this SimpleUserGroupModel.


        :param group_list_out: The group_list_out of this SimpleUserGroupModel.
        :type group_list_out: List[str]
        """

        self._group_list_out = group_list_out
