# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MissionFeed(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, data_feed_uid: str=None, filter_bbox: str=None, filter_type: str=None, filter_callsign: str=None, uid: str=None, name: str=None):  # noqa: E501
        """MissionFeed - a model defined in Swagger

        :param data_feed_uid: The data_feed_uid of this MissionFeed.  # noqa: E501
        :type data_feed_uid: str
        :param filter_bbox: The filter_bbox of this MissionFeed.  # noqa: E501
        :type filter_bbox: str
        :param filter_type: The filter_type of this MissionFeed.  # noqa: E501
        :type filter_type: str
        :param filter_callsign: The filter_callsign of this MissionFeed.  # noqa: E501
        :type filter_callsign: str
        :param uid: The uid of this MissionFeed.  # noqa: E501
        :type uid: str
        :param name: The name of this MissionFeed.  # noqa: E501
        :type name: str
        """
        self.swagger_types = {
            'data_feed_uid': str,
            'filter_bbox': str,
            'filter_type': str,
            'filter_callsign': str,
            'uid': str,
            'name': str
        }

        self.attribute_map = {
            'data_feed_uid': 'dataFeedUid',
            'filter_bbox': 'filterBbox',
            'filter_type': 'filterType',
            'filter_callsign': 'filterCallsign',
            'uid': 'uid',
            'name': 'name'
        }
        self._data_feed_uid = data_feed_uid
        self._filter_bbox = filter_bbox
        self._filter_type = filter_type
        self._filter_callsign = filter_callsign
        self._uid = uid
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'MissionFeed':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MissionFeed of this MissionFeed.  # noqa: E501
        :rtype: MissionFeed
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_feed_uid(self) -> str:
        """Gets the data_feed_uid of this MissionFeed.


        :return: The data_feed_uid of this MissionFeed.
        :rtype: str
        """
        return self._data_feed_uid

    @data_feed_uid.setter
    def data_feed_uid(self, data_feed_uid: str):
        """Sets the data_feed_uid of this MissionFeed.


        :param data_feed_uid: The data_feed_uid of this MissionFeed.
        :type data_feed_uid: str
        """

        self._data_feed_uid = data_feed_uid

    @property
    def filter_bbox(self) -> str:
        """Gets the filter_bbox of this MissionFeed.


        :return: The filter_bbox of this MissionFeed.
        :rtype: str
        """
        return self._filter_bbox

    @filter_bbox.setter
    def filter_bbox(self, filter_bbox: str):
        """Sets the filter_bbox of this MissionFeed.


        :param filter_bbox: The filter_bbox of this MissionFeed.
        :type filter_bbox: str
        """

        self._filter_bbox = filter_bbox

    @property
    def filter_type(self) -> str:
        """Gets the filter_type of this MissionFeed.


        :return: The filter_type of this MissionFeed.
        :rtype: str
        """
        return self._filter_type

    @filter_type.setter
    def filter_type(self, filter_type: str):
        """Sets the filter_type of this MissionFeed.


        :param filter_type: The filter_type of this MissionFeed.
        :type filter_type: str
        """

        self._filter_type = filter_type

    @property
    def filter_callsign(self) -> str:
        """Gets the filter_callsign of this MissionFeed.


        :return: The filter_callsign of this MissionFeed.
        :rtype: str
        """
        return self._filter_callsign

    @filter_callsign.setter
    def filter_callsign(self, filter_callsign: str):
        """Sets the filter_callsign of this MissionFeed.


        :param filter_callsign: The filter_callsign of this MissionFeed.
        :type filter_callsign: str
        """

        self._filter_callsign = filter_callsign

    @property
    def uid(self) -> str:
        """Gets the uid of this MissionFeed.


        :return: The uid of this MissionFeed.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid: str):
        """Sets the uid of this MissionFeed.


        :param uid: The uid of this MissionFeed.
        :type uid: str
        """

        self._uid = uid

    @property
    def name(self) -> str:
        """Gets the name of this MissionFeed.


        :return: The name of this MissionFeed.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this MissionFeed.


        :param name: The name of this MissionFeed.
        :type name: str
        """

        self._name = name
