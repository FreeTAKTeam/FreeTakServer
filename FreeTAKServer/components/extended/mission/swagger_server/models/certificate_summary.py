# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CertificateSummary(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, issuer_dn: str=None, subject_dn: str=None, serial_number: int=None, finger_print: str=None):  # noqa: E501
        """CertificateSummary - a model defined in Swagger

        :param issuer_dn: The issuer_dn of this CertificateSummary.  # noqa: E501
        :type issuer_dn: str
        :param subject_dn: The subject_dn of this CertificateSummary.  # noqa: E501
        :type subject_dn: str
        :param serial_number: The serial_number of this CertificateSummary.  # noqa: E501
        :type serial_number: int
        :param finger_print: The finger_print of this CertificateSummary.  # noqa: E501
        :type finger_print: str
        """
        self.swagger_types = {
            'issuer_dn': str,
            'subject_dn': str,
            'serial_number': int,
            'finger_print': str
        }

        self.attribute_map = {
            'issuer_dn': 'issuerDN',
            'subject_dn': 'subjectDN',
            'serial_number': 'serialNumber',
            'finger_print': 'fingerPrint'
        }
        self._issuer_dn = issuer_dn
        self._subject_dn = subject_dn
        self._serial_number = serial_number
        self._finger_print = finger_print

    @classmethod
    def from_dict(cls, dikt) -> 'CertificateSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CertificateSummary of this CertificateSummary.  # noqa: E501
        :rtype: CertificateSummary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issuer_dn(self) -> str:
        """Gets the issuer_dn of this CertificateSummary.


        :return: The issuer_dn of this CertificateSummary.
        :rtype: str
        """
        return self._issuer_dn

    @issuer_dn.setter
    def issuer_dn(self, issuer_dn: str):
        """Sets the issuer_dn of this CertificateSummary.


        :param issuer_dn: The issuer_dn of this CertificateSummary.
        :type issuer_dn: str
        """

        self._issuer_dn = issuer_dn

    @property
    def subject_dn(self) -> str:
        """Gets the subject_dn of this CertificateSummary.


        :return: The subject_dn of this CertificateSummary.
        :rtype: str
        """
        return self._subject_dn

    @subject_dn.setter
    def subject_dn(self, subject_dn: str):
        """Sets the subject_dn of this CertificateSummary.


        :param subject_dn: The subject_dn of this CertificateSummary.
        :type subject_dn: str
        """

        self._subject_dn = subject_dn

    @property
    def serial_number(self) -> int:
        """Gets the serial_number of this CertificateSummary.


        :return: The serial_number of this CertificateSummary.
        :rtype: int
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number: int):
        """Sets the serial_number of this CertificateSummary.


        :param serial_number: The serial_number of this CertificateSummary.
        :type serial_number: int
        """

        self._serial_number = serial_number

    @property
    def finger_print(self) -> str:
        """Gets the finger_print of this CertificateSummary.


        :return: The finger_print of this CertificateSummary.
        :rtype: str
        """
        return self._finger_print

    @finger_print.setter
    def finger_print(self, finger_print: str):
        """Sets the finger_print of this CertificateSummary.


        :param finger_print: The finger_print of this CertificateSummary.
        :type finger_print: str
        """

        self._finger_print = finger_print
